{"ast":null,"code":"var _jsxFileName = \"/Users/shreya1821/Dev/Wcc_cricket/src/Components/Common-Components/CustomizeTripForm.jsx\";\nimport React, { Component } from 'react';\nimport { Button, DatePicker, Form, Input, InputNumber, notification, Space } from \"antd\";\nimport moment from 'moment';\nimport { createCustomizeTrip } from '../../Controller/api/customizeTrip';\nimport { MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\nconst {\n  RangePicker\n} = DatePicker;\n\nconst openNotification = (placement, message, description) => {\n  notification.info({\n    message,\n    description,\n    placement\n  });\n};\n\nclass CustomizeTripForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = React.createRef();\n    this.state = {\n      loading: false\n    };\n\n    this.onFinish = values => {\n      this.setState({\n        loading: true\n      });\n      createCustomizeTrip(values).then(res => {\n        this.setState({\n          loading: false\n        }, () => {\n          openNotification('bottomCenter', 'Your Query sent successfully', \"Thanks for contacting us. You'll be contacted soon by our team!\");\n          this.formRef.current.resetFields();\n        });\n      }).catch(err => {\n        this.setState({\n          loading: false\n        }, () => {\n          openNotification('bottomCenter', 'Error while sending your message', 'Something went wrong! Please try again later.');\n        });\n      });\n    };\n\n    this.handleAddOn = type => {\n      let traveller = parseInt(this.formRef.current.getFieldValue('travellers'));\n\n      if (!traveller) {\n        this.formRef.current.setFieldsValue({\n          travellers: type === 'sub' ? 0 : 1\n        });\n        return;\n      }\n\n      if (traveller === 99) {\n        return;\n      }\n\n      this.formRef.current.setFieldsValue({\n        travellers: type === 'sub' ? traveller - 1 : traveller + 1\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 24\n      },\n      wrapperCol: {\n        span: 24\n      } // initialValues={{remember: true}}\n      ,\n      onFinish: this.onFinish // onFinishFailed={onFinishFailed}\n      ,\n      autoComplete: \"off\",\n      requiredMark: false,\n      ref: this.formRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Name\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input your name!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Enter Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Email Id\",\n      name: \"emailId\",\n      rules: [{\n        required: true,\n        message: 'Please input your email!'\n      }, {\n        type: 'email',\n        message: 'Please enter valid Email Id'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: 'Enter Email',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Contact No.\",\n      name: \"contactNo\",\n      rules: [{\n        required: true,\n        message: 'Please input your Contact number!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: 'Enter Contact',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 col-sm-6 pr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      className: \"value-plus-min\",\n      label: \" No. of Travellers\",\n      name: \"travellers\",\n      rules: [{\n        required: true,\n        message: 'Please enter No of Travellers!'\n      }, {\n        pattern: new RegExp('^[1-9]+[0-9]*$'),\n        message: 'Please enter valid input'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"0\",\n      maxLength: 2,\n      addonBefore: /*#__PURE__*/React.createElement(PlusOutlined, {\n        onClick: () => this.handleAddOn('add'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 87\n        }\n      }),\n      addonAfter: /*#__PURE__*/React.createElement(MinusOutlined, {\n        onClick: () => this.handleAddOn('sub'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 157\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 ol-sm-6 pl-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Month\",\n      name: \"month\",\n      rules: [{\n        required: true,\n        message: 'Please select month!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      picker: \"month\",\n      disabledDate: current => current && current < moment().endOf('day'),\n      format: \"MMM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Additional Requests\",\n      name: \"additionalRequests\" // rules={[{required: true, message: 'Please input your password!'}]}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input.TextArea, {\n      className: \"textArea\",\n      placeholder: 'Enter here',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      loading: this.state.loading,\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, \"Place your request\")))));\n  }\n\n}\n\nexport default CustomizeTripForm;","map":{"version":3,"sources":["/Users/shreya1821/Dev/Wcc_cricket/src/Components/Common-Components/CustomizeTripForm.jsx"],"names":["React","Component","Button","DatePicker","Form","Input","InputNumber","notification","Space","moment","createCustomizeTrip","MinusOutlined","PlusOutlined","RangePicker","openNotification","placement","message","description","info","CustomizeTripForm","formRef","createRef","state","loading","onFinish","values","setState","then","res","current","resetFields","catch","err","handleAddOn","type","traveller","parseInt","getFieldValue","setFieldsValue","travellers","render","span","required","pattern","RegExp","endOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,WAA1C,EAAuDC,YAAvD,EAAqEC,KAArE,QAAkF,MAAlF;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,mBAA5C;AAGA,MAAM;AAAEC,EAAAA;AAAF,IAAkBV,UAAxB;;AACA,MAAMW,gBAAgB,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,WAArB,KAAqC;AAC1DV,EAAAA,YAAY,CAACW,IAAb,CAAkB;AACdF,IAAAA,OADc;AAEdC,IAAAA,WAFc;AAGdF,IAAAA;AAHc,GAAlB;AAKH,CAND;;AAOA,MAAMI,iBAAN,SAAgClB,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCmB,OADsC,GAC5BpB,KAAK,CAACqB,SAAN,EAD4B;AAAA,SAEtCC,KAFsC,GAE9B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF8B;;AAAA,SAMtCC,QANsC,GAM1BC,MAAD,IAAY;AACnB,WAAKC,QAAL,CAAc;AACVH,QAAAA,OAAO,EAAE;AADC,OAAd;AAGAb,MAAAA,mBAAmB,CAACe,MAAD,CAAnB,CAA4BE,IAA5B,CAAiCC,GAAG,IAAI;AACpC,aAAKF,QAAL,CAAc;AACVH,UAAAA,OAAO,EAAE;AADC,SAAd,EAEG,MAAM;AACLT,UAAAA,gBAAgB,CAAC,cAAD,EAAiB,8BAAjB,EAAiD,iEAAjD,CAAhB;AACA,eAAKM,OAAL,CAAaS,OAAb,CAAqBC,WAArB;AACH,SALD;AAMH,OAPD,EAOGC,KAPH,CAOSC,GAAG,IAAI;AACZ,aAAKN,QAAL,CAAc;AACVH,UAAAA,OAAO,EAAE;AADC,SAAd,EAEG,MAAM;AACLT,UAAAA,gBAAgB,CAAC,cAAD,EAAiB,kCAAjB,EAAqD,+CAArD,CAAhB;AACH,SAJD;AAKH,OAbD;AAcH,KAxBqC;;AAAA,SAyBtCmB,WAzBsC,GAyBvBC,IAAD,IAAU;AACpB,UAAIC,SAAS,GAAGC,QAAQ,CAAC,KAAKhB,OAAL,CAAaS,OAAb,CAAqBQ,aAArB,CAAmC,YAAnC,CAAD,CAAxB;;AACA,UAAG,CAACF,SAAJ,EAAc;AACV,aAAKf,OAAL,CAAaS,OAAb,CAAqBS,cAArB,CAAoC;AAChCC,UAAAA,UAAU,EAAEL,IAAI,KAAK,KAAT,GAAiB,CAAjB,GAAqB;AADD,SAApC;AAGA;AACH;;AACD,UAAIC,SAAS,KAAK,EAAlB,EAAsB;AAClB;AACH;;AAED,WAAKf,OAAL,CAAaS,OAAb,CAAqBS,cAArB,CAAoC;AAChCC,QAAAA,UAAU,EAAEL,IAAI,KAAK,KAAT,GAAiBC,SAAS,GAAG,CAA7B,GAAiCA,SAAS,GAAG;AADzB,OAApC;AAIH,KAzCqC;AAAA;;AA2CtCK,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAFd;AAGI,MAAA,UAAU,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHhB,CAII;AAJJ;AAKI,MAAA,QAAQ,EAAE,KAAKjB,QALnB,CAMI;AANJ;AAOI,MAAA,YAAY,EAAC,KAPjB;AAQI,MAAA,YAAY,EAAE,KARlB;AASI,MAAA,GAAG,EAAE,KAAKJ,OATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,MADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAE,CAAC;AACJsB,QAAAA,QAAQ,EAAE,IADN;AACY1B,QAAAA,OAAO,EAAE;AADrB,OAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CADJ,eAYI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,KAAK,EAAE,CACH;AAAE0B,QAAAA,QAAQ,EAAE,IAAZ;AAAkB1B,QAAAA,OAAO,EAAE;AAA3B,OADG,EAEH;AAAEkB,QAAAA,IAAI,EAAE,OAAR;AAAiBlB,QAAAA,OAAO,EAAE;AAA1B,OAFG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ,CAZJ,eAwBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,aADV;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAE,CAAC;AAAE0B,QAAAA,QAAQ,EAAE,IAAZ;AAAkB1B,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CAxBJ,eAiCI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,SAAS,EAAC,gBADd;AAEI,MAAA,KAAK,EAAC,oBAFV;AAGI,MAAA,IAAI,EAAC,YAHT;AAII,MAAA,KAAK,EAAE,CACH;AAAE0B,QAAAA,QAAQ,EAAE,IAAZ;AAAkB1B,QAAAA,OAAO,EAAE;AAA3B,OADG,EAEH;AAAE2B,QAAAA,OAAO,EAAE,IAAIC,MAAJ,CAAW,gBAAX,CAAX;AAAyC5B,QAAAA,OAAO,EAAE;AAAlD,OAFG,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,GAAnB;AAAuB,MAAA,SAAS,EAAE,CAAlC;AAAqC,MAAA,WAAW,eAAE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAM,KAAKiB,WAAL,CAAiB,KAAjB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlD;AAA4G,MAAA,UAAU,eAAE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAE,MAAM,KAAKA,WAAL,CAAiB,KAAjB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ,CADJ,eAcI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,CAAC;AAAES,QAAAA,QAAQ,EAAE,IAAZ;AAAkB1B,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAC,OAAnB;AAA2B,MAAA,YAAY,EAAGa,OAAD,IAAaA,OAAO,IAAIA,OAAO,GAAGpB,MAAM,GAAGoC,KAAT,CAAe,KAAf,CAA3E;AAAkG,MAAA,MAAM,EAAE,KAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CAdJ,CADJ,CAjCJ,eA2DI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,qBADV;AAEI,MAAA,IAAI,EAAC,oBAFT,CAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,WAAW,EAAE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CA3DJ,eAoEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWC,OAA5B;AAAqC,MAAA,IAAI,EAAC,SAA1C;AAAoD,MAAA,QAAQ,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,CApEJ,CAXJ,CADJ;AA0FH;;AAtIqC;;AAyI1C,eAAeJ,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, DatePicker, Form, Input, InputNumber, notification, Space } from \"antd\";\nimport moment from 'moment';\nimport { createCustomizeTrip } from '../../Controller/api/customizeTrip';\nimport { MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\n\n\nconst { RangePicker } = DatePicker;\nconst openNotification = (placement, message, description) => {\n    notification.info({\n        message,\n        description,\n        placement,\n    });\n};\nclass CustomizeTripForm extends Component {\n    formRef = React.createRef()\n    state = {\n        loading: false\n    }\n\n    onFinish = (values) => {\n        this.setState({\n            loading: true\n        })\n        createCustomizeTrip(values).then(res => {\n            this.setState({\n                loading: false\n            }, () => {\n                openNotification('bottomCenter', 'Your Query sent successfully', \"Thanks for contacting us. You'll be contacted soon by our team!\");\n                this.formRef.current.resetFields()\n            })\n        }).catch(err => {\n            this.setState({\n                loading: false\n            }, () => {\n                openNotification('bottomCenter', 'Error while sending your message', 'Something went wrong! Please try again later.');\n            })\n        })\n    }\n    handleAddOn = (type) => {\n        let traveller = parseInt(this.formRef.current.getFieldValue('travellers'))\n        if(!traveller){\n            this.formRef.current.setFieldsValue({\n                travellers: type === 'sub' ? 0 : 1\n            })\n            return; \n        }\n        if (traveller === 99) {\n            return;\n        }\n\n        this.formRef.current.setFieldsValue({\n            travellers: type === 'sub' ? traveller - 1 : traveller + 1\n        })\n\n    }\n\n    render() {\n        return (\n            <Form\n                name=\"basic\"\n                labelCol={{ span: 24 }}\n                wrapperCol={{ span: 24 }}\n                // initialValues={{remember: true}}\n                onFinish={this.onFinish}\n                // onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n                requiredMark={false}\n                ref={this.formRef}\n            >\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <Form.Item\n                            label=\"Name\"\n                            name=\"name\"\n                            rules={[{\n                                required: true, message: 'Please input your name!'\n                            }]}\n                        >\n                            <Input placeholder=\"Enter Name\" />\n                        </Form.Item>\n                    </div>\n                    <div className=\"col-12\">\n                        <Form.Item\n                            label=\"Email Id\"\n                            name=\"emailId\"\n                            rules={[\n                                { required: true, message: 'Please input your email!' },\n                                { type: 'email', message: 'Please enter valid Email Id' }\n                            ]}\n                        >\n                            <Input placeholder={'Enter Email'} />\n                        </Form.Item>\n                    </div>\n                    <div className=\"col-12\">\n                        <Form.Item\n                            label=\"Contact No.\"\n                            name=\"contactNo\"\n                            rules={[{ required: true, message: 'Please input your Contact number!' }]}\n                        >\n                            <Input placeholder={'Enter Contact'} />\n                        </Form.Item>\n                    </div>\n                    <div className=\"col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-6 col-sm-6 pr-1\">\n                                <Form.Item\n                                    className=\"value-plus-min\"\n                                    label=\" No. of Travellers\"\n                                    name=\"travellers\"\n                                    rules={[\n                                        { required: true, message: 'Please enter No of Travellers!' },\n                                        { pattern: new RegExp('^[1-9]+[0-9]*$'), message: 'Please enter valid input' }\n                                    ]}\n                                >\n                                    <Input placeholder='0' maxLength={2} addonBefore={<PlusOutlined onClick={() => this.handleAddOn('add')} />} addonAfter={<MinusOutlined onClick={() => this.handleAddOn('sub')} />} />\n                                </Form.Item>\n                            </div>\n                            <div className=\"col-6 ol-sm-6 pl-1\">\n                                <Form.Item\n                                    label=\"Month\"\n                                    name=\"month\"\n                                    rules={[{ required: true, message: 'Please select month!' }]}\n                                >\n                                    <DatePicker picker='month' disabledDate={(current) => current && current < moment().endOf('day')} format={\"MMM\"} />\n                                </Form.Item>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12\">\n                        <Form.Item\n                            label=\"Additional Requests\"\n                            name=\"additionalRequests\"\n                        // rules={[{required: true, message: 'Please input your password!'}]}\n                        >\n                            <Input.TextArea className=\"textArea\" placeholder={'Enter here'} />\n                        </Form.Item>\n                    </div>\n                    <div className=\"col-12\">\n                        <Form.Item>\n                            <Button loading={this.state.loading} type=\"primary\" htmlType=\"submit\">\n                                Place your request\n                            </Button>\n                        </Form.Item>\n                    </div>\n                </div>\n            </Form>\n        )\n    }\n}\n\nexport default CustomizeTripForm;"]},"metadata":{},"sourceType":"module"}