{"ast":null,"code":"var _jsxFileName = \"/Users/shreya1821/Dev/Wcc_cricket/src/Components/Testimonials/create/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Layout, Input, Button, Form, Upload, Spin, Rate } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport './index.scss';\nimport AdminHeader from \"../../AdminHeader\";\nimport { routes } from \"../../../Controller/Routes\";\nimport { history } from \"../../../Controller/history\";\nimport { BASE_URL, S3_URL } from \"../../../Controller/common\";\nimport { get } from 'lodash';\nimport { createTestimonial, getTestimonialById, updateTestimonial } from \"../../../Controller/api/testimonial.Service\";\nconst {\n  Content\n} = Layout;\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nclass ManageTestimonial extends Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = React.createRef();\n    this.state = {\n      buttonLoading: false,\n      loading: false,\n      testimonialData: {},\n      fetching: false\n    };\n\n    this.handleChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.formRef.current.setFieldsValue({\n          image: get(info, 'file.response.response.image', '')\n        });\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n\n    this.onFinish = values => {\n      this.setState({\n        buttonLoading: true\n      });\n      const testimonialId = this.props.match.params.id;\n\n      if (testimonialId) {\n        updateTestimonial(values, testimonialId).then(res => {\n          this.setState({\n            buttonLoading: false\n          });\n          history.push(routes.dashboard.testimonial.self);\n        }).catch(err => {\n          console.log(\"edit err\", err);\n        });\n      } else {\n        createTestimonial(values).then(res => {\n          this.setState({\n            buttonLoading: false\n          });\n          history.push(routes.dashboard.testimonial.self);\n        }).catch(err => {\n          this.setState({\n            buttonLoading: false\n          });\n          console.log(\"error\");\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const testimonialId = this.props.match.params.id;\n\n    if (testimonialId) {\n      this.setState({\n        fetching: true\n      });\n      getTestimonialById(testimonialId).then(res => {\n        // this.formRef.current.setFieldsValue({\n        //   name: 'kush'\n        // })\n        this.setState({\n          testimonialData: res.data.response.testimonial,\n          fetching: false\n        });\n      }).catch(err => {\n        this.setState({\n          fetching: false\n        });\n        console.log(\"err---->\", err);\n      });\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      imageUrl\n    } = this.state;\n    const testimonialId = this.props.match.params.id;\n\n    if (this.state.fetching) {\n      return /*#__PURE__*/React.createElement(Spin, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      className: \"layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AdminHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Content, {\n      style: {\n        padding: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"site-layout-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: testimonialId ? \"Edit Testimonial\" : \"Create Testimonial\",\n      extra: /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => history.push(routes.dashboard.testimonial.self),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 94\n        }\n      }, \"Testimonials\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      ref: this.formRef,\n      name: \"basic\",\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 8\n      },\n      initialValues: { ...this.state.testimonialData\n      },\n      onFinish: this.onFinish // onFinishFailed={onFinishFailed}\n      ,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Name\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Name'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Description\",\n      name: \"description\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Description!'\n      }],\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input.TextArea, {\n      maxLength: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Rating\",\n      name: \"rating\",\n      rules: [{\n        required: true,\n        message: 'Please Enter rating!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Rate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        offset: 5,\n        span: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        width: \"200px\"\n      },\n      loading: this.state.buttonLoading,\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, testimonialId ? \"Edit\" : \"Create\"))))))));\n  }\n\n}\n\nexport default ManageTestimonial;","map":{"version":3,"sources":["/Users/shreya1821/Dev/Wcc_cricket/src/Components/Testimonials/create/index.jsx"],"names":["React","Component","Card","Layout","Input","Button","Form","Upload","Spin","Rate","LoadingOutlined","PlusOutlined","AdminHeader","routes","history","BASE_URL","S3_URL","get","createTestimonial","getTestimonialById","updateTestimonial","Content","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","ManageTestimonial","formRef","createRef","state","buttonLoading","loading","testimonialData","fetching","handleChange","info","file","status","setState","current","setFieldsValue","image","originFileObj","imageUrl","onFinish","values","testimonialId","props","match","params","id","then","res","push","dashboard","testimonial","self","catch","err","console","log","componentDidMount","data","response","render","padding","span","required","message","offset","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Layout, Input, Button, Form, Upload, Spin, Rate } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport './index.scss';\nimport AdminHeader from \"../../AdminHeader\";\nimport { routes } from \"../../../Controller/Routes\";\nimport { history } from \"../../../Controller/history\";\nimport { BASE_URL, S3_URL } from \"../../../Controller/common\";\nimport { get } from 'lodash'\nimport { createTestimonial, getTestimonialById, updateTestimonial } from \"../../../Controller/api/testimonial.Service\";\n\n\nconst { Content } = Layout;\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nclass ManageTestimonial extends Component {\n  formRef = React.createRef()\n  state = {\n    buttonLoading: false,\n    loading: false,\n    testimonialData: {},\n    fetching: false\n  }\n\n  componentDidMount() {\n    const testimonialId = this.props.match.params.id;\n    if (testimonialId) {\n      this.setState({ fetching: true })\n      getTestimonialById(testimonialId).then((res) => {\n        // this.formRef.current.setFieldsValue({\n        //   name: 'kush'\n        // })\n        this.setState({\n          testimonialData: res.data.response.testimonial,\n          fetching: false\n        })\n      }).catch((err) => {\n        this.setState({ fetching: false })\n        console.log(\"err---->\", err)\n      })\n    }\n  }\n\n  handleChange = info => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.formRef.current.setFieldsValue({\n        image: get(info, 'file.response.response.image', '')\n      })\n      getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl,\n          loading: false,\n        }),\n      );\n    }\n  };\n\n  onFinish = (values) => {\n    this.setState({ buttonLoading: true })\n    const testimonialId = this.props.match.params.id;\n    if (testimonialId) {\n      updateTestimonial(values, testimonialId).then((res) => {\n        this.setState({ buttonLoading: false })\n        history.push(routes.dashboard.testimonial.self);\n      }).catch((err) => {\n        console.log(\"edit err\", err)\n      })\n    } else {\n      createTestimonial(values).then((res) => {\n        this.setState({ buttonLoading: false })\n        history.push(routes.dashboard.testimonial.self);\n      }).catch((err) => {\n        this.setState({ buttonLoading: false })\n        console.log(\"error\")\n      })\n    }\n  }\n\n  render() {\n    const { loading, imageUrl } = this.state;\n    const testimonialId = this.props.match.params.id;\n\n    if (this.state.fetching) {\n      return <Spin size=\"large\" />\n    }\n    return (\n      <React.Fragment>\n        <Layout className=\"layout\">\n          <AdminHeader />\n          <Content style={{ padding: '20px' }}>\n            <div className=\"site-layout-content\">\n              <Card title={testimonialId ? \"Edit Testimonial\" : \"Create Testimonial\"} extra={<Button type=\"primary\" onClick={() => history.push(routes.dashboard.testimonial.self)}>Testimonials</Button>}>\n                <Form\n                  ref={this.formRef}\n                  name=\"basic\"\n                  labelCol={{\n                    span: 5,\n                  }}\n                  wrapperCol={{\n                    span: 8,\n                  }}\n                  initialValues={{\n                    ...this.state.testimonialData\n                  }}\n                  onFinish={this.onFinish}\n                  // onFinishFailed={onFinishFailed}\n                  autoComplete=\"off\"\n                >\n                  <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Enter Name',\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Enter Description!',\n                      },\n\n                    ]}\n                    max=\"100\"\n                  >\n                    <Input.TextArea maxLength={200} />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Rating\"\n                    name=\"rating\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Enter rating!',\n                      },\n                    ]}\n                  >\n                   <Rate/>\n                  </Form.Item>\n\n                  <Form.Item\n                    wrapperCol={{\n                      offset: 5,\n                      span: 12,\n                    }}\n                  >\n                    <Button style={{ width: \"200px\" }} loading={this.state.buttonLoading} type=\"primary\" htmlType=\"submit\">\n                      {testimonialId ? \"Edit\" : \"Create\"}\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Card>\n            </div>\n          </Content>\n        </Layout>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ManageTestimonial;\n"]},"metadata":{},"sourceType":"module"}