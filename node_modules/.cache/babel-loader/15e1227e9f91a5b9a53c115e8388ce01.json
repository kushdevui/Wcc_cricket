{"ast":null,"code":"import Axios from \"axios\";\nimport { BASE_URL } from \"./common\";\nimport { getEnvValue } from \"./Environment\"; // import {\n//   getRefreshToken,\n//   getUserToken,\n//   setUserToken,\n// } from \"./localStorageHandler\";\n// import { routes } from \"./Routes\";\n// import { history } from \"./history\";\n// import { getAPIUrl } from \"./Global\";\n\nexport const axios = Axios.create({\n  baseURL: BASE_URL\n}); // axios.interceptors.response.use(\n//   (response) => {\n//     return response;\n//   },\n//   function (error) {\n//     console.log(\"error\");\n//     const originalRequest = error.config;\n//     // if (error.response.status === 401 && originalRequest.url === 'http://13.232.130.60:8081/v1/auth/token') {\n//     //     router.push('/login');\n//     //     return Promise.reject(error);\n//     // }\n//     if (\n//       error.response.status === 401 &&\n//       error.response.data.code &&\n//       !originalRequest._retry\n//     ) {\n//       originalRequest._retry = true;\n//       const refreshToken = getRefreshToken();\n//       return Axios.post(getAPIUrl(\"auth.refresh\"), {\n//         refresh: refreshToken,\n//       })\n//         .then(async (res) => {\n//           if (res.status === 200) {\n//             await setUserToken(res.data.access);\n//             originalRequest.headers[\"Authorization\"] =\n//               \"Bearer \" + getUserToken();\n//             return axios(originalRequest);\n//           }\n//         })\n//         .catch((e) => {\n//           history.push(routes.logout);\n//           console.log(e, \"refresh error\");\n//         });\n//     }\n//     return Promise.reject(error);\n//   }\n// );","map":{"version":3,"sources":["/Users/shreya1821/Dev/Wcc_cricket/src/Controller/axiosInterceptor.js"],"names":["Axios","BASE_URL","getEnvValue","axios","create","baseURL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAa;AAChCC,EAAAA,OAAO,EAAEJ;AADuB,CAAb,CAAd,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Axios from \"axios\";\nimport { BASE_URL } from \"./common\";\nimport { getEnvValue } from \"./Environment\";\n// import {\n//   getRefreshToken,\n//   getUserToken,\n//   setUserToken,\n// } from \"./localStorageHandler\";\n// import { routes } from \"./Routes\";\n// import { history } from \"./history\";\n// import { getAPIUrl } from \"./Global\";\n\nexport const axios = Axios.create({\n  baseURL: BASE_URL,\n});\n\n// axios.interceptors.response.use(\n//   (response) => {\n//     return response;\n//   },\n//   function (error) {\n//     console.log(\"error\");\n//     const originalRequest = error.config;\n\n//     // if (error.response.status === 401 && originalRequest.url === 'http://13.232.130.60:8081/v1/auth/token') {\n//     //     router.push('/login');\n//     //     return Promise.reject(error);\n//     // }\n\n//     if (\n//       error.response.status === 401 &&\n//       error.response.data.code &&\n//       !originalRequest._retry\n//     ) {\n//       originalRequest._retry = true;\n//       const refreshToken = getRefreshToken();\n//       return Axios.post(getAPIUrl(\"auth.refresh\"), {\n//         refresh: refreshToken,\n//       })\n//         .then(async (res) => {\n//           if (res.status === 200) {\n//             await setUserToken(res.data.access);\n//             originalRequest.headers[\"Authorization\"] =\n//               \"Bearer \" + getUserToken();\n//             return axios(originalRequest);\n//           }\n//         })\n//         .catch((e) => {\n//           history.push(routes.logout);\n//           console.log(e, \"refresh error\");\n//         });\n//     }\n//     return Promise.reject(error);\n//   }\n// );\n"]},"metadata":{},"sourceType":"module"}