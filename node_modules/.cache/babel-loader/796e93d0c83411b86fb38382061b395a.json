{"ast":null,"code":"var _jsxFileName = \"/Users/shreya1821/Dev/Wcc_cricket/src/Components/Blogs/create/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Layout, Input, Button, Form, Upload, Spin, Radio } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport './index.scss';\nimport AdminHeader from \"../../AdminHeader\";\nimport { routes } from \"../../../Controller/Routes\";\nimport { history } from \"../../../Controller/history\";\nimport { BASE_URL, S3_URL } from \"../../../Controller/common\";\nimport { get } from 'lodash';\nimport { createBlog, getBlogById, updateBlog } from \"../../../Controller/api/blog.Service\";\nimport ReactQuill from 'react-quill'; // ES6\n\nconst {\n  Content\n} = Layout;\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nclass ManageBlogs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = React.createRef();\n    this.state = {\n      buttonLoading: false,\n      loading: false,\n      coverImage: \"\",\n      categoryData: {},\n      fetching: false,\n      thumbnailImage: \"\",\n      coverImageLoading: false\n    };\n\n    this.handleChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.formRef.current.setFieldsValue({\n          thumbnailImage: get(info, 'file.response.response.image', '')\n        });\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n\n    this.handleCoverChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          coverImageLoading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.formRef.current.setFieldsValue({\n          coverImage: get(info, 'file.response.response.image', '')\n        });\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          coverImage: imageUrl,\n          coverImageLoading: false\n        }));\n      }\n    };\n\n    this.onFinish = values => {\n      this.setState({\n        buttonLoading: true\n      });\n      const blogID = this.props.match.params.id;\n\n      if (blogID) {\n        updateBlog(values, blogID).then(res => {\n          this.setState({\n            buttonLoading: false\n          });\n          history.push(routes.dashboard.blogs.self);\n        }).catch(err => {\n          console.log(\"edit err\", err);\n        });\n      } else {\n        createBlog(values).then(res => {\n          this.setState({\n            buttonLoading: false\n          });\n          history.push(routes.dashboard.blogs.self);\n        }).catch(err => {\n          this.setState({\n            buttonLoading: false\n          });\n          console.log(\"error\");\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const blogID = this.props.match.params.id;\n\n    if (blogID) {\n      this.setState({\n        fetching: true\n      });\n      getBlogById(blogID).then(res => {\n        // this.formRef.current.setFieldsValue({\n        //   name: 'kush'\n        // })\n        this.setState({\n          imageUrl: `${S3_URL}${res.data.response.blog.thumbnailImage}`,\n          coverImage: `${S3_URL}${res.data.response.blog.coverImage}`,\n          blogData: res.data.response.blog,\n          fetching: false\n        });\n      }).catch(err => {\n        this.setState({\n          fetching: false\n        });\n        console.log(\"err---->\", err);\n      });\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      imageUrl,\n      coverImage,\n      coverImageLoading\n    } = this.state;\n    const catId = this.props.match.params.id;\n    const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 20\n      }\n    }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Upload\"));\n    const uploadCoverButton = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, coverImageLoading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 30\n      }\n    }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 52\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"Upload\"));\n\n    if (this.state.fetching) {\n      return /*#__PURE__*/React.createElement(Spin, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      className: \"layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AdminHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Content, {\n      style: {\n        padding: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"site-layout-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: catId ? \"Edit Blog\" : \"Create Blog\",\n      extra: /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => history.push(routes.dashboard.blogs.self),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 72\n        }\n      }, \"Blogs\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      ref: this.formRef,\n      name: \"basic\",\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 8\n      },\n      initialValues: { ...this.state.blogData\n      },\n      onFinish: this.onFinish // onFinishFailed={onFinishFailed}\n      ,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Blog Title\",\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Blog Title'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Sub Title\",\n      name: \"subTitle\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Sub Title'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Hot Tag\",\n      name: \"hotTag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Radio.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      value: \"Latest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, \"Latest\"), /*#__PURE__*/React.createElement(Radio, {\n      value: \"Hot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }, \"Hot\"), /*#__PURE__*/React.createElement(Radio, {\n      value: \"Best Seller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 23\n      }\n    }, \"Best Seller\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Description\",\n      name: \"description\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Blog Description!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ReactQuill, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Thumbnail Image(651PX X 651PX)\",\n      name: \"thumbnailImage\",\n      rules: [{\n        required: true,\n        message: 'Please Upload Thumbnail Image'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Upload, {\n      name: \"image\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: `${BASE_URL}/upload-image/` //beforeUpload={beforeUpload}\n      ,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 35\n      }\n    }) : uploadButton)), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Cover Image(651PX X 651PX)\",\n      name: \"coverImage\",\n      rules: [{\n        required: true,\n        message: 'Please Upload Thumbnail Image'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Upload, {\n      name: \"image\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: `${BASE_URL}/upload-image/` //beforeUpload={beforeUpload}\n      ,\n      onChange: this.handleCoverChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, coverImage ? /*#__PURE__*/React.createElement(\"img\", {\n      src: coverImage,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 37\n      }\n    }) : uploadCoverButton)), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        offset: 5,\n        span: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        width: \"200px\"\n      },\n      loading: this.state.buttonLoading,\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, catId ? \"Edit\" : \"Create\"))))))));\n  }\n\n}\n\nexport default ManageBlogs;","map":{"version":3,"sources":["/Users/shreya1821/Dev/Wcc_cricket/src/Components/Blogs/create/index.jsx"],"names":["React","Component","Card","Layout","Input","Button","Form","Upload","Spin","Radio","LoadingOutlined","PlusOutlined","AdminHeader","routes","history","BASE_URL","S3_URL","get","createBlog","getBlogById","updateBlog","ReactQuill","Content","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","ManageBlogs","formRef","createRef","state","buttonLoading","loading","coverImage","categoryData","fetching","thumbnailImage","coverImageLoading","handleChange","info","file","status","setState","current","setFieldsValue","originFileObj","imageUrl","handleCoverChange","onFinish","values","blogID","props","match","params","id","then","res","push","dashboard","blogs","self","catch","err","console","log","componentDidMount","data","response","blog","blogData","render","catId","uploadButton","marginTop","uploadCoverButton","padding","span","required","message","width","offset"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Layout, Input, Button, Form, Upload, Spin, Radio } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport './index.scss';\nimport AdminHeader from \"../../AdminHeader\";\nimport { routes } from \"../../../Controller/Routes\";\nimport { history } from \"../../../Controller/history\";\nimport { BASE_URL, S3_URL } from \"../../../Controller/common\";\nimport { get } from 'lodash'\nimport { createBlog, getBlogById, updateBlog } from \"../../../Controller/api/blog.Service\";\nimport ReactQuill from 'react-quill'; // ES6\n\n\nconst { Content } = Layout;\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nclass ManageBlogs extends Component {\n  formRef = React.createRef()\n  state = {\n    buttonLoading: false,\n    loading: false,\n    coverImage: \"\",\n    categoryData: {},\n    fetching: false,\n    thumbnailImage: \"\",\n    coverImageLoading: false,\n  }\n\n  componentDidMount() {\n    const blogID = this.props.match.params.id;\n    if (blogID) {\n      this.setState({ fetching: true })\n      getBlogById(blogID).then((res) => {\n        // this.formRef.current.setFieldsValue({\n        //   name: 'kush'\n        // })\n        this.setState({\n          imageUrl: `${S3_URL}${res.data.response.blog.thumbnailImage}`,\n          coverImage: `${S3_URL}${res.data.response.blog.coverImage}`,\n          blogData: res.data.response.blog,\n          fetching: false\n        })\n      }).catch((err) => {\n        this.setState({ fetching: false })\n        console.log(\"err---->\", err)\n      })\n    }\n  }\n\n  handleChange = info => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.formRef.current.setFieldsValue({\n        thumbnailImage: get(info, 'file.response.response.image', '')\n      })\n      getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          imageUrl,\n          loading: false,\n        }),\n      );\n    }\n  };\n\n  handleCoverChange = info => {\n    if (info.file.status === 'uploading') {\n      this.setState({ coverImageLoading: true });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.formRef.current.setFieldsValue({\n        coverImage: get(info, 'file.response.response.image', '')\n      })\n      getBase64(info.file.originFileObj, imageUrl =>\n        this.setState({\n          coverImage: imageUrl,\n          coverImageLoading: false,\n        }),\n      );\n    }\n  };\n\n  onFinish = (values) => {\n    this.setState({ buttonLoading: true })\n    const blogID = this.props.match.params.id;\n    if (blogID) {\n      updateBlog(values, blogID).then((res) => {\n        this.setState({ buttonLoading: false })\n        history.push(routes.dashboard.blogs.self);\n      }).catch((err) => {\n        console.log(\"edit err\", err)\n      })\n    } else {\n      createBlog(values).then((res) => {\n        this.setState({ buttonLoading: false })\n        history.push(routes.dashboard.blogs.self);\n      }).catch((err) => {\n        this.setState({ buttonLoading: false })\n        console.log(\"error\")\n      })\n    }\n  }\n\n  render() {\n    const { loading, imageUrl, coverImage, coverImageLoading } = this.state;\n    const catId = this.props.match.params.id;\n    const uploadButton = (\n      <div>\n        {loading ? <LoadingOutlined /> : <PlusOutlined />}\n        <div style={{ marginTop: 8 }}>Upload</div>\n      </div>\n    );\n\n    const uploadCoverButton = (\n      <div>\n        {coverImageLoading ? <LoadingOutlined /> : <PlusOutlined />}\n        <div style={{ marginTop: 8 }}>Upload</div>\n      </div>\n    );\n\n    if (this.state.fetching) {\n      return <Spin size=\"large\" />\n    }\n    return (\n      <React.Fragment>\n        <Layout className=\"layout\">\n          <AdminHeader />\n          <Content style={{ padding: '20px' }}>\n            <div className=\"site-layout-content\">\n              <Card title={catId ? \"Edit Blog\" : \"Create Blog\"} extra={<Button type=\"primary\" onClick={() => history.push(routes.dashboard.blogs.self)}>Blogs</Button>}>\n                <Form\n                  ref={this.formRef}\n                  name=\"basic\"\n                  labelCol={{\n                    span: 5,\n                  }}\n                  wrapperCol={{\n                    span: 8,\n                  }}\n                  initialValues={{\n                    ...this.state.blogData\n                  }}\n                  onFinish={this.onFinish}\n                  // onFinishFailed={onFinishFailed}\n                  autoComplete=\"off\"\n                >\n                  <Form.Item\n                    label=\"Blog Title\"\n                    name=\"title\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Enter Blog Title',\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Sub Title\"\n                    name=\"subTitle\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Enter Sub Title',\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Hot Tag\"\n                    name=\"hotTag\"\n                  >\n                    <Radio.Group>\n                      <Radio value=\"Latest\">Latest</Radio>\n                      <Radio value=\"Hot\">Hot</Radio>\n                      <Radio value=\"Best Seller\">Best Seller</Radio>\n                    </Radio.Group>\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Enter Blog Description!',\n                      },\n                    ]}\n                  >\n                    {/* <Input.TextArea /> */}\n                    <ReactQuill />\n                  </Form.Item>\n\n                  <Form.Item\n                    label=\"Thumbnail Image(651PX X 651PX)\"\n                    name=\"thumbnailImage\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Upload Thumbnail Image',\n                      },\n                    ]}\n                  >\n                    <Upload\n                      name=\"image\"\n                      listType=\"picture-card\"\n                      className=\"avatar-uploader\"\n                      showUploadList={false}\n                      action={`${BASE_URL}/upload-image/`}\n                      //beforeUpload={beforeUpload}\n                      onChange={this.handleChange}\n                    >\n                      {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                    </Upload>\n                  </Form.Item>\n                  <Form.Item\n                    label=\"Cover Image(651PX X 651PX)\"\n                    name=\"coverImage\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please Upload Thumbnail Image',\n                      },\n                    ]}\n                  >\n                    <Upload\n                      name=\"image\"\n                      listType=\"picture-card\"\n                      className=\"avatar-uploader\"\n                      showUploadList={false}\n                      action={`${BASE_URL}/upload-image/`}\n                      //beforeUpload={beforeUpload}\n                      onChange={this.handleCoverChange}\n                    >\n                      {coverImage ? <img src={coverImage} alt=\"avatar\" style={{ width: '100%' }} /> : uploadCoverButton}\n                    </Upload>\n                  </Form.Item>\n                  <Form.Item\n                    wrapperCol={{\n                      offset: 5,\n                      span: 12,\n                    }}\n                  >\n                    <Button style={{ width: \"200px\" }} loading={this.state.buttonLoading} type=\"primary\" htmlType=\"submit\">\n                      {catId ? \"Edit\" : \"Create\"}\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Card>\n            </div>\n          </Content>\n        </Layout>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ManageBlogs;\n"]},"metadata":{},"sourceType":"module"}