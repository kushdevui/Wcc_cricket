{"ast":null,"code":"var _jsxFileName = \"/Users/shreya1821/Dev/Wcc_cricket/src/Components/Dashboard/Hotels/create/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Layout, Input, Button, Form, Upload, Spin, Rate, TimePicker } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { get, isEmpty, has } from 'lodash';\nimport { createHotel, getHotelById, updateHotel } from \"../../../../Controller/api/hotelService\";\nimport AdminHeader from \"../../../AdminHeader\";\nimport { history } from \"../../../../Controller/history\";\nimport { routes } from \"../../../../Controller/Routes\";\nimport { BASE_URL, S3_URL } from \"../../../../Controller/common\";\nimport moment from 'moment';\nconst {\n  Content\n} = Layout;\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nclass ManageHotels extends Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = React.createRef();\n    this.state = {\n      buttonLoading: false,\n      loading: false,\n      imagesLoading: false,\n      fileList: [],\n      fetching: false\n    };\n\n    this.handleChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.formRef.current.setFieldsValue({\n          hotelImage: get(info, 'file.response.response.image', '')\n        });\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n\n    this.onFinish = values => {\n      this.setState({\n        buttonLoading: true\n      });\n      const catId = this.props.match.params.id;\n\n      if (catId) {\n        updateHotel(values, catId).then(res => {\n          this.setState({\n            buttonLoading: false\n          });\n          history.push(routes.dashboard.hotels.self);\n        }).catch(err => {\n          console.log(\"edit err\", err);\n        });\n      } else {\n        createHotel(values).then(res => {\n          this.setState({\n            buttonLoading: false\n          });\n          history.push(routes.dashboard.hotels.self);\n        }).catch(err => {\n          this.setState({\n            buttonLoading: false\n          });\n          console.log(\"error\");\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const catId = this.props.match.params.id;\n\n    if (catId) {\n      this.setState({\n        fetching: true\n      });\n      getHotelById(catId).then(res => {\n        console.log(res.data.response.hotel, 'fff');\n        this.setState({\n          imageUrl: `${S3_URL}${res.data.response.hotel.hotelImage}`,\n          fetching: false\n        });\n        this.formRef.current.setFieldsValue({ ...res.data.response.hotel,\n          hotelCheckInTime: moment(res.data.response.hotel.hotelCheckInTime)\n        });\n      }).catch(err => {\n        this.setState({\n          fetching: false\n        });\n        console.log(\"err---->\", err);\n      });\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      imageUrl,\n      imagesLoading\n    } = this.state;\n    const catId = this.props.match.params.id;\n    const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, loading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 28\n      }\n    }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Upload\"));\n\n    if (this.state.fetching) {\n      return /*#__PURE__*/React.createElement(Spin, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      className: \"layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AdminHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Content, {\n      style: {\n        padding: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"site-layout-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: catId ? \"Edit Hotel\" : \"Create Hotel\",\n      extra: /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => history.push(routes.dashboard.hotels.self),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 88\n        }\n      }, \"Hotels\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      ref: this.formRef,\n      name: \"basic\",\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 8\n      },\n      onFinish: this.onFinish // onFinishFailed={onFinishFailed}\n      ,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Hotel Name\",\n      name: \"hotelName\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Hotel Name'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Hotel Rating\",\n      name: \"hotelRating\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Hotel Rating'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Rate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Hotel Includes\",\n      name: \"hotelIncludes\",\n      rules: [],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Room Type\",\n      name: \"hotelRoomType\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Room Type'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Check In Time\",\n      name: \"hotelCheckInTime\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Check In time'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TimePicker, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Hotel Image (500px \\xD7 614px)\",\n      name: \"hotelImage\",\n      rules: [{\n        required: true,\n        message: 'Please Upload Hotel Image'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Upload, {\n      name: \"image\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\" // multiple={true}\n      ,\n      showUploadList: false // fileList={fileList}\n      ,\n      action: `${BASE_URL}/upload-image/` //beforeUpload={beforeUpload}\n      ,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 41\n      }\n    }, imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 57\n      }\n    }) : uploadButton)), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      loading: this.state.buttonLoading,\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 41\n      }\n    }, \"Submit\"))))))));\n  }\n\n}\n\nexport default ManageHotels;","map":{"version":3,"sources":["/Users/shreya1821/Dev/Wcc_cricket/src/Components/Dashboard/Hotels/create/index.jsx"],"names":["React","Component","Card","Layout","Input","Button","Form","Upload","Spin","Rate","TimePicker","LoadingOutlined","PlusOutlined","get","isEmpty","has","createHotel","getHotelById","updateHotel","AdminHeader","history","routes","BASE_URL","S3_URL","moment","Content","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","ManageHotels","formRef","createRef","state","buttonLoading","loading","imagesLoading","fileList","fetching","handleChange","info","file","status","setState","current","setFieldsValue","hotelImage","originFileObj","imageUrl","onFinish","values","catId","props","match","params","id","then","res","push","dashboard","hotels","self","catch","err","console","log","componentDidMount","data","response","hotel","hotelCheckInTime","render","uploadButton","marginTop","padding","span","required","message","width","offset"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Layout, Input, Button, Form, Upload, Spin, Rate, TimePicker } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { get, isEmpty, has } from 'lodash'\nimport { createHotel, getHotelById, updateHotel } from \"../../../../Controller/api/hotelService\";\nimport AdminHeader from \"../../../AdminHeader\";\nimport { history } from \"../../../../Controller/history\";\nimport { routes } from \"../../../../Controller/Routes\";\nimport { BASE_URL, S3_URL } from \"../../../../Controller/common\";\nimport moment from 'moment'\n\nconst { Content } = Layout;\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\nclass ManageHotels extends Component {\n    formRef = React.createRef()\n    state = {\n        buttonLoading: false,\n        loading: false,\n        imagesLoading: false,\n        fileList: [],\n        fetching: false\n    }\n    componentDidMount() {\n        const catId = this.props.match.params.id;\n        if (catId) {\n            this.setState({ fetching: true })\n            getHotelById(catId).then((res) => {\n                console.log(res.data.response.hotel,'fff')\n                this.setState({\n                    imageUrl: `${S3_URL}${res.data.response.hotel.hotelImage}`,\n                    fetching: false\n                })\n                this.formRef.current.setFieldsValue({\n                    ...res.data.response.hotel,\n                    hotelCheckInTime: moment(res.data.response.hotel.hotelCheckInTime)\n                })\n            }).catch((err) => {\n                this.setState({ fetching: false })\n                console.log(\"err---->\", err)\n            })\n        }\n    }\n    handleChange = info => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.formRef.current.setFieldsValue({\n                hotelImage: get(info, 'file.response.response.image', '')\n            })\n            getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    imageUrl,\n                    loading: false,\n                }),\n            );\n        }\n    };\n    onFinish = (values) => {\n        this.setState({ buttonLoading: true })\n        const catId = this.props.match.params.id;\n        if (catId) {\n            updateHotel(values, catId).then((res) => {\n                this.setState({ buttonLoading: false })\n                history.push(routes.dashboard.hotels.self);\n            }).catch((err) => {\n                console.log(\"edit err\", err)\n            })\n        } else {\n            createHotel(values).then((res) => {\n                this.setState({ buttonLoading: false })\n                history.push(routes.dashboard.hotels.self);\n            }).catch((err) => {\n                this.setState({ buttonLoading: false })\n                console.log(\"error\")\n            })\n        }\n    }\n    render() {\n        const { loading, imageUrl, imagesLoading } = this.state;\n        const catId = this.props.match.params.id;\n        const uploadButton = (\n            <div>\n                {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                <div style={{ marginTop: 8 }}>Upload</div>\n            </div>\n        );\n        if (this.state.fetching) {\n            return <Spin size=\"large\" />\n        }\n        return (\n            <React.Fragment>\n                <Layout className=\"layout\">\n                    <AdminHeader />\n                    <Content style={{ padding: '20px' }}>\n                        <div className=\"site-layout-content\">\n                            <Card title={catId ? \"Edit Hotel\" : \"Create Hotel\"} extra={<Button type=\"primary\" onClick={() => history.push(routes.dashboard.hotels.self)}>Hotels</Button>}>\n                                <Form\n                                    ref={this.formRef}\n                                    name=\"basic\"\n                                    labelCol={{\n                                        span: 5,\n                                    }}\n                                    wrapperCol={{\n                                        span: 8,\n                                    }}\n                                    onFinish={this.onFinish}\n                                    // onFinishFailed={onFinishFailed}\n                                    autoComplete=\"off\"\n                                >\n                                    <Form.Item\n                                        label=\"Hotel Name\"\n                                        name=\"hotelName\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Hotel Name',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Hotel Rating\"\n                                        name=\"hotelRating\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Hotel Rating',\n                                            },\n                                        ]}\n                                    >\n                                        <Rate />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Hotel Includes\"\n                                        name=\"hotelIncludes\"\n                                        rules={[]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Room Type\"\n                                        name=\"hotelRoomType\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Room Type',\n                                            }\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Check In Time\"\n                                        name=\"hotelCheckInTime\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Check In time',\n                                            }\n                                        ]}\n                                    >\n                                        <TimePicker />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Hotel Image (500px × 614px)\"\n                                        name=\"hotelImage\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Upload Hotel Image',\n                                            },\n                                        ]}\n                                    >\n                                        <Upload\n                                            name=\"image\"\n                                            listType=\"picture-card\"\n                                            className=\"avatar-uploader\"\n                                            // multiple={true}\n                                            showUploadList={false}\n                                            // fileList={fileList}\n                                            action={`${BASE_URL}/upload-image/`}\n                                            //beforeUpload={beforeUpload}\n                                            onChange={this.handleChange}\n                                        >\n                                            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                                        </Upload>\n                                    </Form.Item>\n                                    <Form.Item\n                                        wrapperCol={{\n                                            offset: 8,\n                                            span: 16,\n                                        }}\n                                    >\n                                        <Button loading={this.state.buttonLoading} type=\"primary\" htmlType=\"submit\">\n                                            Submit\n                                        </Button>\n                                    </Form.Item>\n                                </Form>\n                            </Card>\n                        </div>\n                    </Content>\n                </Layout>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ManageHotels"]},"metadata":{},"sourceType":"module"}