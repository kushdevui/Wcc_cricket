{"ast":null,"code":"var _jsxFileName = \"/Users/shreya1821/Dev/Wcc_cricket/src/Components/itinerary/BatchesTabs.jsx\";\nimport React, { Component } from \"react\";\nimport { Checkbox, Col, Row, Steps, DatePicker } from \"antd\";\nimport { get, groupBy, map } from 'lodash';\nimport moment from \"moment\";\nimport { isMobile } from \"react-device-detect\"; // import {Checkbox, Col, Row, Steps} from \"antd\";\n\nconst {\n  Step\n} = Steps;\n\nclass BatchesTabs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      monthGroup: {},\n      selectedMonth: 0,\n      dates: [],\n      // selectedBatch: '',\n      customDate: null\n    };\n    this.datePickerRef = React.createRef();\n\n    this.stepChange = current => {\n      this.setState({\n        selectedMonth: current,\n        dates: this.state.monthGroup[Object.keys(this.state.monthGroup)[current]]\n      });\n    };\n\n    this.onDateChange = date => {\n      if (!date) {\n        this.setState({\n          customDate: date\n        }, () => this.props.updateSelectedBatch(null));\n        return;\n      }\n\n      const fromDate = moment(date).add(this.props.trip.noOfDays, 'days');\n      console.log(fromDate, 'ddd');\n      const batch = `${moment(date).format('DD MMM YYYY')} - ${moment(fromDate).format('DD MMM YYYY')}`;\n      this.setState({\n        customDate: moment(date)\n      }, () => this.props.updateSelectedBatch(batch));\n    };\n  }\n\n  componentDidMount() {\n    const batches = get(this.props, 'trip.batches', []).map(batch => {\n      return {\n        to: moment(batch.to).format('DD MMM YYYY'),\n        from: moment(batch.from).format('DD MMM YYYY'),\n        month: moment(batch.to).format('MMMM')\n      };\n    });\n    const monthGroup = groupBy(batches, 'month');\n    this.setState({\n      monthGroup,\n      selectedMonth: 0,\n      dates: monthGroup[Object.keys(monthGroup)[0]] // selectedBatch: `${(monthGroup[Object. keys(monthGroup)[0]])[0].to} - ${(monthGroup[Object. keys(monthGroup)[0]])[0].from}`\n\n    });\n    this.props.updateSelectedBatch(`${monthGroup[Object.keys(monthGroup)[0]][0].to} - ${monthGroup[Object.keys(monthGroup)[0]][0].from}`);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mx-0 tabs-main-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row tabs-card-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, !isMobile && /*#__PURE__*/React.createElement(Steps, {\n      progressDot: true,\n      current: this.state.selectedMonth,\n      onChange: current => this.stepChange(current),\n      direction: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 43\n      }\n    }, map(Object.keys(this.state.monthGroup), month => {\n      return /*#__PURE__*/React.createElement(Step, {\n        key: month,\n        title: month,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 45\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-sm-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row itinerary-details-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, \"Travelling On\"), /*#__PURE__*/React.createElement(DatePicker, {\n      value: this.state.customDate,\n      onChange: this.onDateChange,\n      className: \"custom-batch\",\n      format: \"dddd, DD MMM YYYY\",\n      disabledDate: current => current && current < moment().endOf('day'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, \"Select from existing batches\"), /*#__PURE__*/React.createElement(Checkbox.Group, {\n      style: {\n        width: '100%'\n      },\n      value: [this.props.selectedBatch],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }, map(this.state.dates, date => {\n      return /*#__PURE__*/React.createElement(Col, {\n        span: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: () => {\n          this.setState({\n            customDate: null\n          }, () => this.props.updateSelectedBatch(`${date.to} - ${date.from}`));\n        },\n        key: `${date.to} - ${date.from}`,\n        value: `${date.to} - ${date.from}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 57\n        }\n      }, `${date.to} - ${date.from}`));\n    })))))))));\n  }\n\n}\n\nexport default BatchesTabs;","map":{"version":3,"sources":["/Users/shreya1821/Dev/Wcc_cricket/src/Components/itinerary/BatchesTabs.jsx"],"names":["React","Component","Checkbox","Col","Row","Steps","DatePicker","get","groupBy","map","moment","isMobile","Step","BatchesTabs","state","monthGroup","selectedMonth","dates","customDate","datePickerRef","createRef","stepChange","current","setState","Object","keys","onDateChange","date","props","updateSelectedBatch","fromDate","add","trip","noOfDays","console","log","batch","format","componentDidMount","batches","to","from","month","render","endOf","width","selectedBatch"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Checkbox, Col, Row, Steps, DatePicker} from \"antd\";\nimport {get, groupBy, map} from 'lodash'\nimport moment from \"moment\";\nimport {isMobile} from \"react-device-detect\";\n// import {Checkbox, Col, Row, Steps} from \"antd\";\n\nconst {Step} = Steps;\n\nclass BatchesTabs extends Component {\n    state = {\n        monthGroup: {},\n        selectedMonth: 0,\n        dates: [],\n        // selectedBatch: '',\n        customDate : null\n    }\n    datePickerRef = React.createRef();\n    componentDidMount() {\n        const batches = get(this.props, 'trip.batches', []).map(batch => {\n            return {\n                to: moment(batch.to).format('DD MMM YYYY'),\n                from: moment(batch.from).format('DD MMM YYYY'),\n                month: moment(batch.to).format('MMMM')\n            }\n        });\n        const monthGroup = groupBy(batches, 'month')\n        this.setState({\n            monthGroup,\n            selectedMonth: 0,\n            dates: monthGroup[Object.keys(monthGroup)[0]],\n            // selectedBatch: `${(monthGroup[Object. keys(monthGroup)[0]])[0].to} - ${(monthGroup[Object. keys(monthGroup)[0]])[0].from}`\n        })\n        this.props.updateSelectedBatch(`${(monthGroup[Object.keys(monthGroup)[0]])[0].to} - ${(monthGroup[Object.keys(monthGroup)[0]])[0].from}`)\n    }\n\n    stepChange = (current) => {\n        this.setState({\n            selectedMonth: current,\n            dates: this.state.monthGroup[Object.keys(this.state.monthGroup)[current]]\n        })\n    }\n\n    onDateChange=(date)=>{\n        if(!date){\n            this.setState({\n                customDate: date\n            }, ()=>this.props.updateSelectedBatch(null))\n            \n            return;\n        }\n        const fromDate = moment(date).add(this.props.trip.noOfDays, 'days')\n        console.log(fromDate, 'ddd')\n        const batch = `${moment(date).format('DD MMM YYYY')} - ${moment(fromDate).format('DD MMM YYYY')}`\n        this.setState({\n            customDate: moment(date)\n        }, () => this.props.updateSelectedBatch(batch))\n        \n\n    }\n\n    render() {\n        return (\n            <div className=\"row mx-0 tabs-main-row\">\n                <div className={\"col-12\"}>\n                    <div className=\"row tabs-card-data\">\n                        <div className=\"col-12 col-sm-2\">\n                            {!isMobile && <Steps progressDot current={this.state.selectedMonth}\n                                                onChange={(current) => this.stepChange(current)} direction=\"vertical\">\n                                {map(Object.keys(this.state.monthGroup), month => {\n                                    return (<Step key={month} title={month}/>)\n                                })}\n                            </Steps>}\n                        </div>\n                        <div className=\"col-12 col-sm-10\">\n                            <div className=\"row itinerary-details-row\">\n                                <div className=\"col-12\">\n                                    <h6>Travelling On</h6>\n                                    <DatePicker value={this.state.customDate} onChange={this.onDateChange} className=\"custom-batch\" format={\"dddd, DD MMM YYYY\"} disabledDate={(current) => current && current < moment().endOf('day')}/>\n                                    <h6>Select from existing batches</h6>\n                                    <Checkbox.Group style={{width: '100%'}}  value={[this.props.selectedBatch]}>\n                                        <Row>\n                                            {map(this.state.dates, date => {\n                                                return (\n                                                    <Col span={24}>\n                                                        <Checkbox\n                                                            onChange={() => {\n                                                                this.setState({\n                                                                    customDate: null\n                                                                }, ()=>  this.props.updateSelectedBatch(`${date.to} - ${date.from}`))\n                                                               \n                                                            }}\n                                                            key={`${date.to} - ${date.from}`}\n                                                            value={`${date.to} - ${date.from}`}>{`${date.to} - ${date.from}`}</Checkbox>\n                                                    </Col>\n                                                )\n                                            })}\n                                        </Row>\n                                    </Checkbox.Group>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BatchesTabs;"]},"metadata":{},"sourceType":"module"}