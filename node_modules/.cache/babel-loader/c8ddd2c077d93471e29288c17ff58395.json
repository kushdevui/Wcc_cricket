{"ast":null,"code":"var _jsxFileName = \"/Users/shreya1821/Dev/Wcc_cricket/src/Components/Trips/Create/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Layout, Checkbox, Row, Col, Input, Button, notification, Form, Switch, Upload, Select, Divider, InputNumber, Space, DatePicker, Spin, Rate, TimePicker } from 'antd';\nimport { map, isEmpty, get, groupBy, forEach, has } from 'lodash';\nimport { LoadingOutlined, PlusOutlined, MinusCircleOutlined, UploadOutlined } from '@ant-design/icons';\nimport './index.scss';\nimport AdminHeader from \"../../AdminHeader\";\nimport { routes } from \"../../../Controller/Routes\";\nimport { history } from \"../../../Controller/history\";\nimport { BASE_URL, S3_URL } from \"../../../Controller/common\";\nimport { getCategories } from \"../../../Controller/api/category.Service\";\nimport { createTrip, getTripById, updateTrip } from \"../../../Controller/api/trip.Service\";\nimport moment from 'moment';\nimport ReactQuill from 'react-quill';\nimport { getHotels } from \"../../../Controller/api/hotelService\";\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Content\n} = Layout;\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nconst openNotification = placement => {\n  notification.info({\n    message: `Something Went`,\n    description: 'Something went wrong with the server API is not working',\n    placement\n  });\n};\n\nclass ManageTrips extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      fileList\n    }) => {\n      console.log(fileList, 'here');\n      this.setState({\n        fileList\n      });\n      this.formRef.current.setFieldsValue({\n        images: fileList.map((file, index) => {\n          if (has(file, 'response')) {\n            return file.response.response.image;\n          } else {\n            return file.name;\n          }\n        })\n      });\n    };\n\n    this.handleThumbnailChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          thumbnailLoading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.formRef.current.setFieldsValue({\n          thumbnailImage: get(info, 'file.response.response.image', '')\n        });\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          thumbnailImageUrl: imageUrl,\n          thumbnailLoading: false\n        }));\n      }\n    };\n\n    this.handleHeroImageChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          heroImageLoading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.formRef.current.setFieldsValue({\n          heroImage: get(info, 'file.response.response.image', '')\n        });\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          heroImageUrl: imageUrl,\n          heroImageLoading: false\n        }));\n      }\n    };\n\n    this.handleHotelImageChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          hotelImageLoading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.formRef.current.setFieldsValue({\n          hotelImage: get(info, 'file.response.response.image', '')\n        });\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          hotelImageUrl: imageUrl,\n          hotelImageLoading: false\n        }));\n      }\n    };\n\n    this.handlePDFChange = info => {\n      if (info.file.status === 'uploading') {\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.formRef.current.setFieldsValue({\n          itinerary: get(info, 'file.response.response.image', '')\n        });\n      }\n    };\n\n    this.handleRemove = item => {\n      console.log(item, 'remove');\n      this.setState({\n        fileList: this.state.fileList.filter(file => file.url !== item.url)\n      }, () => {\n        this.formRef.current.setFieldsValue({\n          images: [...this.state.fileList]\n        });\n      });\n    };\n\n    this.onFinish = values => {\n      this.setState({\n        isFetching: true\n      });\n      const tripId = this.props.match.params.id;\n\n      if (tripId) {\n        updateTrip(values, tripId).then(res => {\n          this.setState({\n            isFetching: false\n          });\n          history.push(routes.dashboard.trips.self);\n        }).catch(err => {\n          this.setState({\n            isFetching: false\n          });\n        });\n      } else {\n        createTrip(values).then(res => {\n          this.setState({\n            isFetching: false\n          });\n          history.push(routes.dashboard.trips.self);\n        }).catch(err => {\n          this.setState({\n            isFetching: false\n          });\n        });\n      }\n    };\n\n    this.onFinishFailed = error => {\n      this.setState({\n        isFetching: false\n      });\n      openNotification('bottomCenter');\n    };\n\n    this.onValuesChange = values => {\n      this.setState({\n        values\n      });\n    };\n\n    this.state = {\n      loading: false,\n      noOfDays: 0,\n      fileList: [],\n      thumbnailLoading: false,\n      thumbnailImageUrl: \"\",\n      heroImageUrl: \"\",\n      heroImageLoading: false,\n      hotelImageLoading: false,\n      hotelImageUrl: \"\",\n      categories: [],\n      hotels: [],\n      isFetching: false,\n      tripData: {},\n      isformFetch: false\n    };\n    this.formRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const tripId = this.props.match.params.id;\n\n    if (tripId) {\n      this.setState({\n        isformFetch: true\n      });\n      getTripById(tripId).then(res => {\n        var _res$data$response$tr, _res$data$response$tr2;\n\n        const daysObj = {};\n        forEach(res.data.response.trip.days, (day, index) => {\n          daysObj[`day${index + 1}`] = day;\n        });\n        this.setState({\n          isformFetch: false,\n          fileList: res.data.response.trip.images.map((image, index) => {\n            return {\n              uid: `-${index + 1}`,\n              name: image,\n              status: 'done',\n              url: `${S3_URL}${image}`\n            };\n          }),\n          thumbnailImageUrl: `${S3_URL}${res.data.response.trip.thumbnailImage}`,\n          heroImageUrl: `${S3_URL}${res.data.response.trip.heroImage}`,\n          hotelImageUrl: res.data.response.trip.hotelImage ? `${S3_URL}${res.data.response.trip.hotelImage}` : '',\n          noOfDays: res.data.response.trip.noOfDays\n        });\n        this.formRef.current.setFieldsValue({ ...daysObj,\n          ...res.data.response.trip,\n          category: res.data.response.trip.category._id,\n          hotels: res.data.response.trip.hotels.map(hotel => hotel._id),\n          hotelDates: (_res$data$response$tr = res.data.response.trip) === null || _res$data$response$tr === void 0 ? void 0 : (_res$data$response$tr2 = _res$data$response$tr.hotelDates) === null || _res$data$response$tr2 === void 0 ? void 0 : _res$data$response$tr2.map(date => moment(date)),\n          hotelCheckInTime: moment(res.data.response.trip.hotelCheckInTime),\n          batches: res.data.response.trip.batches.map(batch => {\n            return {\n              to: moment(batch.to),\n              from: moment(batch.from)\n            };\n          })\n        });\n      }).catch(err => {\n        console.log(err, 'err');\n      });\n    }\n\n    getCategories().then(res => {\n      this.setState({\n        categories: res.data.response.categories\n      });\n    }).catch(err => {\n      console.log(\"catErr\", err);\n    });\n    getHotels().then(res => {\n      this.setState({\n        hotels: res.data.response.Hotels\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      fileList,\n      thumbnailImageUrl,\n      thumbnailLoading,\n      hotelImageLoading,\n      hotelImageUrl,\n      heroImageUrl,\n      heroImageLoading\n    } = this.state;\n    const tripId = this.props.match.params.id;\n    const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, loading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 28\n      }\n    }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, \"Upload\"));\n    const uploadButtonThumbnail = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, thumbnailLoading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 59\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, \"Upload Thumbnail\"));\n    const uploadButtonHeroImage = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }, heroImageLoading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 59\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, \"Upload Hero Image\"));\n    const uploadButtonHotelImage = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }\n    }, hotelImageLoading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 38\n      }\n    }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 60\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }, \"Upload Hotel Image\"));\n\n    if (this.state.isformFetch) {\n      return /*#__PURE__*/React.createElement(Spin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      className: \"layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AdminHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Content, {\n      style: {\n        padding: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"site-layout-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Manage Trip\",\n      extra: /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => history.push(routes.dashboard.trips.self),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 62\n        }\n      }, \"Trips\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      ref: this.formRef,\n      name: \"basic\",\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 8\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      autoComplete: \"off\",\n      onValuesChange: this.onValuesChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Trip Name\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Trip Name'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Discounted Price (\\u20B9)\",\n      name: \"discountedPrice\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Discounted Price'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      style: {\n        width: '200px'\n      } // formatter={(value) => `₹ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n      // parser={(value) => value.replace(/\\₹\\s?|(,*)/g, '')}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Actual Price (\\u20B9)\",\n      name: \"price\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Actual Price'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      style: {\n        width: '200px'\n      } // formatter={(value) => `₹ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n      // parser={(value) => value.replace(/\\₹\\s?|(,*)/g, '')}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Kid Price (\\u20B9)\",\n      name: \"kidPrice\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Kid Price'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      style: {\n        width: '200px'\n      } // formatter={(value) => `₹ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n      // parser={(value) => value.replace(/\\₹\\s?|(,*)/g, '')}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"From City\",\n      name: \"fromCity\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Departure Destination'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"To City\",\n      name: \"toCity\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Arival Destination'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Duration of the drip\",\n      name: \"duration\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Duration of the trip'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Is Trip International ?\",\n      name: \"isInternational\",\n      rules: [],\n      valuePropName: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Trip Status\",\n      name: \"status\",\n      rules: [],\n      valuePropName: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Category\",\n      name: \"category\",\n      rules: [{\n        required: true,\n        message: 'Please Select trip category'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"Select Category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 41\n      }\n    }, map(this.state.categories, category => {\n      return /*#__PURE__*/React.createElement(Select.Option, {\n        value: category._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 57\n        }\n      }, category.name);\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"inclusions\",\n      label: \"Inclusions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"flight\",\n      style: {\n        lineHeight: '32px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 53\n      }\n    }, \"Flight\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"hostel\",\n      style: {\n        lineHeight: '32px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 53\n      }\n    }, \"Accomodation\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"food\",\n      style: {\n        lineHeight: '32px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 53\n      }\n    }, \"Food\"))))), /*#__PURE__*/React.createElement(Divider, {\n      plain: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 37\n      }\n    }, \"CREATE YOUR ITINERARY\"), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"No Of Days in Trip\",\n      name: \"noOfDays\",\n      rules: [{\n        required: true,\n        message: 'Please Enter the number of days included in the trip'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      style: {\n        width: '200px'\n      },\n      onChange: e => {\n        console.log(e);\n        this.setState({\n          noOfDays: e\n        }, () => {\n          this.formRef.current.setFieldsValue({\n            noOfDays: e\n          });\n        });\n      },\n      placeholder: \"No of Days included in the trip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      hidden: true,\n      name: `days`,\n      initialValue: [],\n      rules: [{\n        required: true,\n        message: 'Please Enter the Day Description'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 37\n      }\n    }), map(Array(this.state.noOfDays), (day, index) => {\n      return /*#__PURE__*/React.createElement(Form.Item, {\n        label: `Day ${index + 1}`,\n        name: `day${index + 1}`,\n        rules: [{\n          required: true,\n          message: 'Please Enter the Day Description'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input.TextArea, {\n        onChange: e => {\n          const oldDays = this.formRef.current.getFieldValue('days') || [];\n          oldDays[index] = e.target.value;\n          this.formRef.current.setFieldsValue({\n            days: oldDays\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 49\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(Divider, {\n      plain: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 37\n      }\n    }, \"CREATE BATCHES\"), /*#__PURE__*/React.createElement(Form.List, {\n      name: \"batches\",\n      rules: [{\n        validator: async (_, batches) => {\n          console.log(_, batches, 'here');\n\n          if (isEmpty(batches)) {\n            return Promise.reject(new Error('At least 1 batch is required'));\n          }\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 37\n      }\n    }, (fields, {\n      add,\n      remove,\n      errors\n    }) => /*#__PURE__*/React.createElement(React.Fragment, null, fields.map(({\n      key,\n      name,\n      ...restField\n    }) => /*#__PURE__*/React.createElement(Space, {\n      key: key,\n      style: {\n        display: 'flex',\n        marginBottom: 8\n      },\n      align: \"baseline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, restField, {\n      name: [name, 'from'],\n      rules: [{\n        required: true,\n        message: 'Missing Batch Start Date'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      disabledDate: current => current && current < moment().endOf('day'),\n      style: {\n        width: '200px'\n      },\n      placeholder: \"Batch Starts From\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, restField, {\n      name: [name, 'to'],\n      rules: [{\n        required: true,\n        message: 'Missing Batch End Date'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      disabledDate: current => current && current < moment().endOf('day'),\n      style: {\n        width: '200px'\n      },\n      placeholder: \"Batch Ends on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n      onClick: () => remove(name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"dashed\",\n      onClick: () => add(),\n      block: true,\n      icon: /*#__PURE__*/React.createElement(PlusOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 109\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 53\n      }\n    }, \"Add Batch\")), /*#__PURE__*/React.createElement(Form.ErrorList, {\n      errors: errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      plain: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 37\n      }\n    }, \"Uploads\"), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Trip Images Thumbnail (500px \\xD7 614px)\",\n      name: \"thumbnailImage\",\n      rules: [{\n        required: true,\n        message: 'Please Upload Category Image'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Upload, {\n      name: \"image\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\" // multiple={true}\n      ,\n      showUploadList: false // fileList={fileList}\n      ,\n      action: `${BASE_URL}/upload-image/` //beforeUpload={beforeUpload}\n      ,\n      onChange: this.handleThumbnailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 41\n      }\n    }, thumbnailImageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbnailImageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 66\n      }\n    }) : uploadButtonThumbnail)), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Hero Images (570px \\xD7 258px)\",\n      name: \"heroImage\",\n      rules: [{\n        required: true,\n        message: 'Please Upload Hero Image'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Upload, {\n      name: \"image\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\" // multiple={true}\n      ,\n      showUploadList: false // fileList={fileList}\n      ,\n      action: `${BASE_URL}/upload-image/` //beforeUpload={beforeUpload}\n      ,\n      onChange: this.handleHeroImageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 41\n      }\n    }, heroImageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n      src: heroImageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 61\n      }\n    }) : uploadButtonHeroImage)), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Trip Images (501px \\xD7 775px)\",\n      name: \"images\",\n      rules: [{\n        required: true,\n        message: 'Please Upload Category Image'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Upload, {\n      name: \"image\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\" // multiple={true}\n      // showUploadList={true}\n      ,\n      fileList: isEmpty(fileList) ? null : fileList,\n      action: `${BASE_URL}/upload-image/` //beforeUpload={beforeUpload}\n      ,\n      onChange: this.handleChange,\n      onRemove: this.handleRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 41\n      }\n    }, fileList.length >= 2 ? null : uploadButton)), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Itinerary\",\n      name: \"itinerary\",\n      rules: [{\n        required: true,\n        message: 'Please Upload Itinerary PDF'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Upload, {\n      name: \"image\",\n      onChange: this.handlePDFChange,\n      action: `${BASE_URL}/upload-image/`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(UploadOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 59\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 45\n      }\n    }, \"Click to Upload\")), this.formRef.current && this.formRef.current.getFieldValue('itinerary') && /*#__PURE__*/React.createElement(\"a\", {\n      href: S3_URL + this.formRef.current.getFieldValue('itinerary'),\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 117\n      }\n    }, \"Uploaded Itinerary\")), /*#__PURE__*/React.createElement(Divider, {\n      plain: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 37\n      }\n    }, \"Other Info\"), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Other Info\",\n      name: \"otherInfo\",\n      rules: [{\n        required: true,\n        message: 'Please Enter Other Information!'\n      }],\n      style: {\n        height: '300px'\n      },\n      initialValue: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ReactQuill, {\n      style: {\n        height: '250px',\n        width: '900px'\n      },\n      modules: {\n        toolbar: [[{\n          'header': '1'\n        }, {\n          'header': '2'\n        }, {\n          'font': []\n        }], [{\n          size: []\n        }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n          'list': 'ordered'\n        }, {\n          'list': 'bullet'\n        }, {\n          'indent': '-1'\n        }, {\n          'indent': '+1'\n        }], ['link', 'image', 'video'], ['clean']],\n        clipboard: {\n          // toggle to add extra line breaks when pasting HTML:\n          matchVisual: false\n        }\n      },\n      formats: ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 41\n      }\n    })), this.formRef.current && this.formRef.current.getFieldValue('inclusions') && this.formRef.current.getFieldValue('inclusions').includes('hostel') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {\n      plain: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 41\n      }\n    }, \"Accomodations\"), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Hotels\",\n      name: \"hotels\",\n      rules: [{\n        required: true,\n        message: 'Please select atleast one hotel'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      mode: \"multiple\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 45\n      }\n    }, this.state.hotels.map(hotel => /*#__PURE__*/React.createElement(Select.Option, {\n      value: hotel._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 53\n      }\n    }, hotel.hotelName))))), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      loading: this.state.isFetching,\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 41\n      }\n    }, \"Submit\"))))))));\n  }\n\n}\n\nexport default ManageTrips;","map":{"version":3,"sources":["/Users/shreya1821/Dev/Wcc_cricket/src/Components/Trips/Create/index.jsx"],"names":["React","Component","Card","Layout","Checkbox","Row","Col","Input","Button","notification","Form","Switch","Upload","Select","Divider","InputNumber","Space","DatePicker","Spin","Rate","TimePicker","map","isEmpty","get","groupBy","forEach","has","LoadingOutlined","PlusOutlined","MinusCircleOutlined","UploadOutlined","AdminHeader","routes","history","BASE_URL","S3_URL","getCategories","createTrip","getTripById","updateTrip","moment","ReactQuill","getHotels","RangePicker","Content","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","openNotification","placement","info","message","description","ManageTrips","constructor","props","handleChange","fileList","console","log","setState","formRef","current","setFieldsValue","images","file","index","response","image","name","handleThumbnailChange","status","thumbnailLoading","thumbnailImage","originFileObj","imageUrl","thumbnailImageUrl","handleHeroImageChange","heroImageLoading","heroImage","heroImageUrl","handleHotelImageChange","hotelImageLoading","hotelImage","hotelImageUrl","handlePDFChange","itinerary","handleRemove","item","state","filter","url","onFinish","values","isFetching","tripId","match","params","id","then","res","push","dashboard","trips","self","catch","err","onFinishFailed","error","onValuesChange","loading","noOfDays","categories","hotels","tripData","isformFetch","createRef","componentDidMount","daysObj","data","trip","days","day","uid","category","_id","hotel","hotelDates","date","hotelCheckInTime","batches","batch","to","from","Hotels","render","uploadButton","marginTop","uploadButtonThumbnail","uploadButtonHeroImage","uploadButtonHotelImage","padding","span","required","width","lineHeight","e","Array","oldDays","getFieldValue","target","value","validator","_","Promise","reject","Error","fields","add","remove","errors","key","restField","display","marginBottom","endOf","length","height","toolbar","size","clipboard","matchVisual","includes","hotelName","offset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,GAAjC,EAAsCC,GAAtC,EAA2CC,KAA3C,EAAkDC,MAAlD,EAA0DC,YAA1D,EAAwEC,IAAxE,EAA8EC,MAA9E,EAAsFC,MAAtF,EAA8FC,MAA9F,EAAsGC,OAAtG,EAA+GC,WAA/G,EAA4HC,KAA5H,EAAmIC,UAAnI,EAA+IC,IAA/I,EAAqJC,IAArJ,EAA2JC,UAA3J,QAA6K,MAA7K;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,EAA4BC,OAA5B,EAAqCC,OAArC,EAA8CC,GAA9C,QAAyD,QAAzD;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,mBAAxC,EAA6DC,cAA7D,QAAmF,mBAAnF;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,4BAAjC;AACA,SAASC,aAAT,QAA8B,0CAA9B;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,sCAApD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,SAAT,QAA0B,sCAA1B;AAGA,MAAM;AAAEC,EAAAA;AAAF,IAAkB1B,UAAxB;AAEA,MAAM;AAAE2B,EAAAA;AAAF,IAAczC,MAApB;;AAEA,SAAS0C,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAC9B,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,EAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACH;;AAGD,MAAMO,gBAAgB,GAAGC,SAAS,IAAI;AAClC7C,EAAAA,YAAY,CAAC8C,IAAb,CAAkB;AACdC,IAAAA,OAAO,EAAG,gBADI;AAEdC,IAAAA,WAAW,EACP,yDAHU;AAIdH,IAAAA;AAJc,GAAlB;AAMH,CAPD;;AASA,MAAMI,WAAN,SAA0BzD,SAA1B,CAAoC;AAChC0D,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkFnBC,YAlFmB,GAkFJ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,MAAtB;AACA,WAAKG,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACA,WAAKI,OAAL,CAAaC,OAAb,CAAqBC,cAArB,CAAoC;AAChCC,QAAAA,MAAM,EAAEP,QAAQ,CAACzC,GAAT,CAAa,CAACiD,IAAD,EAAOC,KAAP,KAAiB;AAClC,cAAI7C,GAAG,CAAC4C,IAAD,EAAO,UAAP,CAAP,EAA2B;AACvB,mBAAOA,IAAI,CAACE,QAAL,CAAcA,QAAd,CAAuBC,KAA9B;AACH,WAFD,MAGK;AACD,mBAAOH,IAAI,CAACI,IAAZ;AACH;AACJ,SAPO;AADwB,OAApC;AAUH,KA/FkB;;AAAA,SAgGnBC,qBAhGmB,GAgGMpB,IAAD,IAAU;AAC9B,UAAIA,IAAI,CAACe,IAAL,CAAUM,MAAV,KAAqB,WAAzB,EAAsC;AAClC,aAAKX,QAAL,CAAc;AAAEY,UAAAA,gBAAgB,EAAE;AAApB,SAAd;AACA;AACH;;AACD,UAAItB,IAAI,CAACe,IAAL,CAAUM,MAAV,KAAqB,MAAzB,EAAiC;AAC7B;AACA,aAAKV,OAAL,CAAaC,OAAb,CAAqBC,cAArB,CAAoC;AAChCU,UAAAA,cAAc,EAAEvD,GAAG,CAACgC,IAAD,EAAO,8BAAP,EAAuC,EAAvC;AADa,SAApC;AAGAV,QAAAA,SAAS,CAACU,IAAI,CAACe,IAAL,CAAUS,aAAX,EAA0BC,QAAQ,IACvC,KAAKf,QAAL,CAAc;AACVgB,UAAAA,iBAAiB,EAAED,QADT;AAEVH,UAAAA,gBAAgB,EAAE;AAFR,SAAd,CADK,CAAT;AAMH;AACJ,KAjHkB;;AAAA,SAmHnBK,qBAnHmB,GAmHM3B,IAAD,IAAU;AAC9B,UAAIA,IAAI,CAACe,IAAL,CAAUM,MAAV,KAAqB,WAAzB,EAAsC;AAClC,aAAKX,QAAL,CAAc;AAAEkB,UAAAA,gBAAgB,EAAE;AAApB,SAAd;AACA;AACH;;AACD,UAAI5B,IAAI,CAACe,IAAL,CAAUM,MAAV,KAAqB,MAAzB,EAAiC;AAC7B;AACA,aAAKV,OAAL,CAAaC,OAAb,CAAqBC,cAArB,CAAoC;AAChCgB,UAAAA,SAAS,EAAE7D,GAAG,CAACgC,IAAD,EAAO,8BAAP,EAAuC,EAAvC;AADkB,SAApC;AAGAV,QAAAA,SAAS,CAACU,IAAI,CAACe,IAAL,CAAUS,aAAX,EAA0BC,QAAQ,IACvC,KAAKf,QAAL,CAAc;AACVoB,UAAAA,YAAY,EAAEL,QADJ;AAEVG,UAAAA,gBAAgB,EAAE;AAFR,SAAd,CADK,CAAT;AAMH;AACJ,KApIkB;;AAAA,SAuInBG,sBAvImB,GAuIO/B,IAAD,IAAU;AAC/B,UAAIA,IAAI,CAACe,IAAL,CAAUM,MAAV,KAAqB,WAAzB,EAAsC;AAClC,aAAKX,QAAL,CAAc;AAAEsB,UAAAA,iBAAiB,EAAE;AAArB,SAAd;AACA;AACH;;AACD,UAAIhC,IAAI,CAACe,IAAL,CAAUM,MAAV,KAAqB,MAAzB,EAAiC;AAC7B;AACA,aAAKV,OAAL,CAAaC,OAAb,CAAqBC,cAArB,CAAoC;AAChCoB,UAAAA,UAAU,EAAEjE,GAAG,CAACgC,IAAD,EAAO,8BAAP,EAAuC,EAAvC;AADiB,SAApC;AAGAV,QAAAA,SAAS,CAACU,IAAI,CAACe,IAAL,CAAUS,aAAX,EAA0BC,QAAQ,IACvC,KAAKf,QAAL,CAAc;AACVwB,UAAAA,aAAa,EAAET,QADL;AAEVO,UAAAA,iBAAiB,EAAE;AAFT,SAAd,CADK,CAAT;AAMH;AACJ,KAxJkB;;AAAA,SAyJnBG,eAzJmB,GAyJAnC,IAAD,IAAU;AACxB,UAAIA,IAAI,CAACe,IAAL,CAAUM,MAAV,KAAqB,WAAzB,EAAsC;AAClC;AACH;;AACD,UAAIrB,IAAI,CAACe,IAAL,CAAUM,MAAV,KAAqB,MAAzB,EAAiC;AAC7B;AACA,aAAKV,OAAL,CAAaC,OAAb,CAAqBC,cAArB,CAAoC;AAChCuB,UAAAA,SAAS,EAAEpE,GAAG,CAACgC,IAAD,EAAO,8BAAP,EAAuC,EAAvC;AADkB,SAApC;AAGH;AACJ,KAnKkB;;AAAA,SAqKnBqC,YArKmB,GAqKHC,IAAD,IAAU;AACrB9B,MAAAA,OAAO,CAACC,GAAR,CAAY6B,IAAZ,EAAkB,QAAlB;AACA,WAAK5B,QAAL,CAAc;AACVH,QAAAA,QAAQ,EAAE,KAAKgC,KAAL,CAAWhC,QAAX,CAAoBiC,MAApB,CAA2BzB,IAAI,IAAIA,IAAI,CAAC0B,GAAL,KAAaH,IAAI,CAACG,GAArD;AADA,OAAd,EAGG,MAAM;AACL,aAAK9B,OAAL,CAAaC,OAAb,CAAqBC,cAArB,CAAoC;AAChCC,UAAAA,MAAM,EAAE,CAAC,GAAG,KAAKyB,KAAL,CAAWhC,QAAf;AADwB,SAApC;AAGH,OAPD;AAQH,KA/KkB;;AAAA,SAiLnBmC,QAjLmB,GAiLPC,MAAD,IAAY;AACnB,WAAKjC,QAAL,CAAc;AACVkC,QAAAA,UAAU,EAAE;AADF,OAAd;AAGA,YAAMC,MAAM,GAAG,KAAKxC,KAAL,CAAWyC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAvC;;AACA,UAAIH,MAAJ,EAAY;AACR7D,QAAAA,UAAU,CAAC2D,MAAD,EAASE,MAAT,CAAV,CAA2BI,IAA3B,CAAgCC,GAAG,IAAI;AACnC,eAAKxC,QAAL,CAAc;AACVkC,YAAAA,UAAU,EAAE;AADF,WAAd;AAGAlE,UAAAA,OAAO,CAACyE,IAAR,CAAa1E,MAAM,CAAC2E,SAAP,CAAiBC,KAAjB,CAAuBC,IAApC;AACH,SALD,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZ,eAAK9C,QAAL,CAAc;AACVkC,YAAAA,UAAU,EAAE;AADF,WAAd;AAGH,SATD;AAWH,OAZD,MAYO;AACH9D,QAAAA,UAAU,CAAC6D,MAAD,CAAV,CAAmBM,IAAnB,CAAyBC,GAAD,IAAS;AAC7B,eAAKxC,QAAL,CAAc;AACVkC,YAAAA,UAAU,EAAE;AADF,WAAd;AAGAlE,UAAAA,OAAO,CAACyE,IAAR,CAAa1E,MAAM,CAAC2E,SAAP,CAAiBC,KAAjB,CAAuBC,IAApC;AACH,SALD,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZ,eAAK9C,QAAL,CAAc;AACVkC,YAAAA,UAAU,EAAE;AADF,WAAd;AAGH,SATD;AAUH;AACJ,KA9MkB;;AAAA,SAgNnBa,cAhNmB,GAgNDC,KAAD,IAAW;AACxB,WAAKhD,QAAL,CAAc;AACVkC,QAAAA,UAAU,EAAE;AADF,OAAd;AAGA9C,MAAAA,gBAAgB,CAAC,cAAD,CAAhB;AACH,KArNkB;;AAAA,SAsNnB6D,cAtNmB,GAsNDhB,MAAD,IAAY;AACzB,WAAKjC,QAAL,CAAc;AACViC,QAAAA;AADU,OAAd;AAGH,KA1NkB;;AAEf,SAAKJ,KAAL,GAAa;AACTqB,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,QAAQ,EAAE,CAFD;AAGTtD,MAAAA,QAAQ,EAAE,EAHD;AAITe,MAAAA,gBAAgB,EAAE,KAJT;AAKTI,MAAAA,iBAAiB,EAAE,EALV;AAMTI,MAAAA,YAAY,EAAE,EANL;AAOTF,MAAAA,gBAAgB,EAAE,KAPT;AAQTI,MAAAA,iBAAiB,EAAE,KARV;AASTE,MAAAA,aAAa,EAAE,EATN;AAUT4B,MAAAA,UAAU,EAAE,EAVH;AAWTC,MAAAA,MAAM,EAAE,EAXC;AAYTnB,MAAAA,UAAU,EAAE,KAZH;AAaToB,MAAAA,QAAQ,EAAE,EAbD;AAcTC,MAAAA,WAAW,EAAE;AAdJ,KAAb;AAiBA,SAAKtD,OAAL,GAAelE,KAAK,CAACyH,SAAN,EAAf;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMtB,MAAM,GAAG,KAAKxC,KAAL,CAAWyC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAvC;;AACA,QAAIH,MAAJ,EAAY;AACR,WAAKnC,QAAL,CAAc;AACVuD,QAAAA,WAAW,EAAE;AADH,OAAd;AAGAlF,MAAAA,WAAW,CAAC8D,MAAD,CAAX,CAAoBI,IAApB,CAA0BC,GAAD,IAAS;AAAA;;AAC9B,cAAMkB,OAAO,GAAG,EAAhB;AACAlG,QAAAA,OAAO,CAACgF,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBC,IAAxB,EAA8B,CAACC,GAAD,EAAMxD,KAAN,KAAgB;AACjDoD,UAAAA,OAAO,CAAE,MAAKpD,KAAK,GAAG,CAAE,EAAjB,CAAP,GAA6BwD,GAA7B;AACH,SAFM,CAAP;AAGA,aAAK9D,QAAL,CAAc;AACVuD,UAAAA,WAAW,EAAE,KADH;AAEV1D,UAAAA,QAAQ,EAAE2C,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBxD,MAAvB,CAA8BhD,GAA9B,CAAkC,CAACoD,KAAD,EAAQF,KAAR,KAAkB;AAC1D,mBAAO;AACHyD,cAAAA,GAAG,EAAG,IAAGzD,KAAK,GAAG,CAAE,EADhB;AAEHG,cAAAA,IAAI,EAAED,KAFH;AAGHG,cAAAA,MAAM,EAAE,MAHL;AAIHoB,cAAAA,GAAG,EAAG,GAAE7D,MAAO,GAAEsC,KAAM;AAJpB,aAAP;AAMH,WAPS,CAFA;AAUVQ,UAAAA,iBAAiB,EAAG,GAAE9C,MAAO,GAAEsE,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuB/C,cAAe,EAV3D;AAWVO,UAAAA,YAAY,EAAG,GAAElD,MAAO,GAAEsE,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBzC,SAAU,EAXjD;AAYVK,UAAAA,aAAa,EAAEgB,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBrC,UAAvB,GAAqC,GAAErD,MAAO,GAAEsE,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBrC,UAAW,EAAlF,GAAsF,EAZ3F;AAaV4B,UAAAA,QAAQ,EAAEX,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBT;AAbvB,SAAd;AAeA,aAAKlD,OAAL,CAAaC,OAAb,CAAqBC,cAArB,CAAoC,EAChC,GAAGuD,OAD6B;AAEhC,aAAGlB,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAFW;AAGhCI,UAAAA,QAAQ,EAAExB,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBI,QAAvB,CAAgCC,GAHV;AAIhCZ,UAAAA,MAAM,EAAEb,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBP,MAAvB,CAA8BjG,GAA9B,CAAkC8G,KAAK,IAAIA,KAAK,CAACD,GAAjD,CAJwB;AAKhCE,UAAAA,UAAU,2BAAE3B,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAApB,oFAAE,sBAAwBO,UAA1B,2DAAE,uBAAoC/G,GAApC,CAAwCgH,IAAI,IAAI7F,MAAM,CAAC6F,IAAD,CAAtD,CALoB;AAMhCC,UAAAA,gBAAgB,EAAE9F,MAAM,CAACiE,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBS,gBAAxB,CANQ;AAOhCC,UAAAA,OAAO,EAAE9B,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBqD,IAAlB,CAAuBU,OAAvB,CAA+BlH,GAA/B,CAAmCmH,KAAK,IAAI;AACjD,mBACI;AACIC,cAAAA,EAAE,EAAEjG,MAAM,CAACgG,KAAK,CAACC,EAAP,CADd;AAEIC,cAAAA,IAAI,EAAElG,MAAM,CAACgG,KAAK,CAACE,IAAP;AAFhB,aADJ;AAMH,WAPQ;AAPuB,SAApC;AAgBH,OApCD,EAoCG5B,KApCH,CAoCUC,GAAD,IAAS;AACdhD,QAAAA,OAAO,CAACC,GAAR,CAAY+C,GAAZ,EAAiB,KAAjB;AACH,OAtCD;AAuCH;;AAED3E,IAAAA,aAAa,GAAGoE,IAAhB,CAAsBC,GAAD,IAAS;AAC1B,WAAKxC,QAAL,CAAc;AACVoD,QAAAA,UAAU,EAAEZ,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkB6C;AADpB,OAAd;AAGH,KAJD,EAIGP,KAJH,CAIUC,GAAD,IAAS;AACdhD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB+C,GAAtB;AACH,KAND;AAOArE,IAAAA,SAAS,GAAG8D,IAAZ,CAAkBC,GAAD,IAAS;AACtB,WAAKxC,QAAL,CAAc;AACVqD,QAAAA,MAAM,EAAEb,GAAG,CAACmB,IAAJ,CAASpD,QAAT,CAAkBmE;AADhB,OAAd;AAGH,KAJD;AAKH;;AA2IDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEzB,MAAAA,OAAF;AAAWrD,MAAAA,QAAX;AAAqBmB,MAAAA,iBAArB;AAAwCJ,MAAAA,gBAAxC;AAA0DU,MAAAA,iBAA1D;AAA6EE,MAAAA,aAA7E;AAA4FJ,MAAAA,YAA5F;AAA0GF,MAAAA;AAA1G,QAA+H,KAAKW,KAA1I;AACA,UAAMM,MAAM,GAAG,KAAKxC,KAAL,CAAWyC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAvC;AAGA,UAAMsC,YAAY,gBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK1B,OAAO,gBAAG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAyB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrC,eAEI;AAAK,MAAA,KAAK,EAAE;AAAE2B,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMA,UAAMC,qBAAqB,gBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKlE,gBAAgB,gBAAG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAyB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9C,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEiE,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,CADJ;AAMA,UAAME,qBAAqB,gBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK7D,gBAAgB,gBAAG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAyB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9C,eAEI;AAAK,MAAA,KAAK,EAAE;AAAE2D,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CADJ;AAMA,UAAMG,sBAAsB,gBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK1D,iBAAiB,gBAAG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAyB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/C,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEuD,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CADJ;;AAMA,QAAI,KAAKhD,KAAL,CAAW0B,WAAf,EAA4B;AACxB,0BAAQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AACD,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAE0B,QAAAA,OAAO,EAAE;AAAX,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,aAAZ;AAA0B,MAAA,KAAK,eAAE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,MAAMjH,OAAO,CAACyE,IAAR,CAAa1E,MAAM,CAAC2E,SAAP,CAAiBC,KAAjB,CAAuBC,IAApC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,GAAG,EAAE,KAAK3C,OADd;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,QAAQ,EAAE;AACNiF,QAAAA,IAAI,EAAE;AADA,OAHd;AAMI,MAAA,UAAU,EAAE;AACRA,QAAAA,IAAI,EAAE;AADE,OANhB;AASI,MAAA,QAAQ,EAAE,KAAKlD,QATnB;AAUI,MAAA,cAAc,EAAE,KAAKe,cAVzB;AAWI,MAAA,YAAY,EAAC,KAXjB;AAYI,MAAA,cAAc,EAAE,KAAKE,cAZzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,WADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACIkC,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAdJ,eA0BI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,2BADV;AAEI,MAAA,IAAI,EAAC,iBAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACI4F,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,WAAD;AACI,MAAA,KAAK,EAAE;AAAE6F,QAAAA,KAAK,EAAE;AAAT,OADX,CAEI;AACA;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CA1BJ,eA0CI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,uBADV;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACID,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,WAAD;AACI,MAAA,KAAK,EAAE;AAAE6F,QAAAA,KAAK,EAAE;AAAT,OADX,CAEI;AACA;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CA1CJ,eA0DI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,oBADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACID,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,WAAD;AACI,MAAA,KAAK,EAAE;AAAE6F,QAAAA,KAAK,EAAE;AAAT,OADX,CAEI;AACA;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CA1DJ,eA0EI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,WADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACID,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CA1EJ,eAsFI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACI4F,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAtFJ,eAmGI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,sBADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACI4F,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAnGJ,eA+GI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,yBADV;AAEI,MAAA,IAAI,EAAC,iBAFT;AAGI,MAAA,KAAK,EAAE,EAHX;AAII,MAAA,aAAa,EAAC,SAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA/GJ,eAwHI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,aADV;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,KAAK,EAAE,EAHX;AAII,MAAA,aAAa,EAAC,SAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAxHJ,eAgII,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACI4F,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQnC,GAAG,CAAC,KAAKyE,KAAL,CAAWuB,UAAZ,EAAwBY,QAAQ,IAAI;AACnC,0BACI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,KAAK,EAAEA,QAAQ,CAACC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCD,QAAQ,CAACvD,IAA9C,CADJ;AAGH,KAJE,CAFX,CAVJ,CAhIJ,eAsJI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,YAAhB;AAA6B,MAAA,KAAK,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD,CAAU,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAAE4E,QAAAA,UAAU,EAAE;AAAd,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,eAMI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CANJ,eAWI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAuB,MAAA,KAAK,EAAE;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAXJ,CADJ,CADJ,CAtJJ,eA6KI,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BA7KJ,eA8KI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,oBADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACIF,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAE6F,QAAAA,KAAK,EAAE;AAAT,OAApB;AAAwC,MAAA,QAAQ,EAAGE,CAAD,IAAO;AACrDxF,QAAAA,OAAO,CAACC,GAAR,CAAYuF,CAAZ;AACA,aAAKtF,QAAL,CAAc;AACVmD,UAAAA,QAAQ,EAAEmC;AADA,SAAd,EAEG,MAAM;AACL,eAAKrF,OAAL,CAAaC,OAAb,CAAqBC,cAArB,CAAoC;AAAEgD,YAAAA,QAAQ,EAAEmC;AAAZ,WAApC;AACH,SAJD;AAKH,OAPD;AAOG,MAAA,WAAW,EAAC,iCAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CA9KJ,eAiMI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,MAAM,MADV;AAEI,MAAA,IAAI,EAAG,MAFX;AAGI,MAAA,YAAY,EAAE,EAHlB;AAII,MAAA,KAAK,EAAE,CACH;AACIH,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjMJ,EA6MKnC,GAAG,CAACmI,KAAK,CAAC,KAAK1D,KAAL,CAAWsB,QAAZ,CAAN,EAA6B,CAACW,GAAD,EAAMxD,KAAN,KAAgB;AAC7C,0BACI,oBAAC,IAAD,CAAM,IAAN;AACI,QAAA,KAAK,EAAG,OAAMA,KAAK,GAAG,CAAE,EAD5B;AAEI,QAAA,IAAI,EAAG,MAAKA,KAAK,GAAG,CAAE,EAF1B;AAGI,QAAA,KAAK,EAAE,CACH;AACI6E,UAAAA,QAAQ,EAAE,IADd;AAEI5F,UAAAA,OAAO,EAAE;AAFb,SADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAUI,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,QAAQ,EAAG+F,CAAD,IAAO;AAC7B,gBAAME,OAAO,GAAG,KAAKvF,OAAL,CAAaC,OAAb,CAAqBuF,aAArB,CAAmC,MAAnC,KAA8C,EAA9D;AACAD,UAAAA,OAAO,CAAClF,KAAD,CAAP,GAAiBgF,CAAC,CAACI,MAAF,CAASC,KAA1B;AACA,eAAK1F,OAAL,CAAaC,OAAb,CAAqBC,cAArB,CAAoC;AAChC0D,YAAAA,IAAI,EAAE2B;AAD0B,WAApC;AAGH,SAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADJ;AAoBH,KArBG,CA7MR,eAmOI,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnOJ,eAoOI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,KAAK,EAAE,CACH;AACII,QAAAA,SAAS,EAAE,OAAOC,CAAP,EAAUvB,OAAV,KAAsB;AAC7BxE,UAAAA,OAAO,CAACC,GAAR,CAAY8F,CAAZ,EAAevB,OAAf,EAAwB,MAAxB;;AACA,cAAIjH,OAAO,CAACiH,OAAD,CAAX,EAAsB;AAClB,mBAAOwB,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,8BAAV,CAAf,CAAP;AACH;AACJ;AANL,OADG,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaK,CAACC,MAAD,EAAS;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,MAAP;AAAeC,MAAAA;AAAf,KAAT,kBACG,0CACKH,MAAM,CAAC7I,GAAP,CAAW,CAAC;AAAEiJ,MAAAA,GAAF;AAAO5F,MAAAA,IAAP;AAAa,SAAG6F;AAAhB,KAAD,kBACR,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAED,GAAZ;AAAiB,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,YAAY,EAAE;AAAjC,OAAxB;AAA8D,MAAA,KAAK,EAAC,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN,oBACQF,SADR;AAEI,MAAA,IAAI,EAAE,CAAC7F,IAAD,EAAO,MAAP,CAFV;AAGI,MAAA,KAAK,EAAE,CAAC;AAAE0E,QAAAA,QAAQ,EAAE,IAAZ;AAAkB5F,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKI,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAGW,OAAD,IAAaA,OAAO,IAAIA,OAAO,GAAG3B,MAAM,GAAGkI,KAAT,CAAe,KAAf,CAA5D;AAAmF,MAAA,KAAK,EAAE;AAAErB,QAAAA,KAAK,EAAE;AAAT,OAA1F;AAA8G,MAAA,WAAW,EAAC,mBAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,eAQI,oBAAC,IAAD,CAAM,IAAN,oBACQkB,SADR;AAEI,MAAA,IAAI,EAAE,CAAC7F,IAAD,EAAO,IAAP,CAFV;AAGI,MAAA,KAAK,EAAE,CAAC;AAAE0E,QAAAA,QAAQ,EAAE,IAAZ;AAAkB5F,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKI,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAGW,OAAD,IAAaA,OAAO,IAAIA,OAAO,GAAG3B,MAAM,GAAGkI,KAAT,CAAe,KAAf,CAA5D;AAAmF,MAAA,KAAK,EAAE;AAAErB,QAAAA,KAAK,EAAE;AAAT,OAA1F;AAA8G,MAAA,WAAW,EAAC,eAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CARJ,eAeI,oBAAC,mBAAD;AAAqB,MAAA,OAAO,EAAE,MAAMe,MAAM,CAAC1F,IAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADH,CADL,eAoBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMyF,GAAG,EAAxC;AAA4C,MAAA,KAAK,MAAjD;AAAkD,MAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CApBJ,eAyBI,oBAAC,IAAD,CAAM,SAAN;AAAgB,MAAA,MAAM,EAAEE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,CAdR,CApOJ,eA+QI,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA/QJ,eAgRI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,0CADV;AAEI,MAAA,IAAI,EAAC,gBAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACIjB,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAC,cAFb;AAGI,MAAA,SAAS,EAAC,iBAHd,CAII;AAJJ;AAKI,MAAA,cAAc,EAAE,KALpB,CAMI;AANJ;AAOI,MAAA,MAAM,EAAG,GAAEtB,QAAS,gBAPxB,CAQI;AARJ;AASI,MAAA,QAAQ,EAAE,KAAKyC,qBATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWKM,iBAAiB,gBAAG;AAAK,MAAA,GAAG,EAAEA,iBAAV;AAA6B,MAAA,GAAG,EAAC,QAAjC;AAA0C,MAAA,KAAK,EAAE;AAAEoE,QAAAA,KAAK,EAAE;AAAT,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA4EN,qBAXlG,CAVJ,CAhRJ,eAwSI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,gCADV;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACIK,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAC,cAFb;AAGI,MAAA,SAAS,EAAC,iBAHd,CAII;AAJJ;AAKI,MAAA,cAAc,EAAE,KALpB,CAMI;AANJ;AAOI,MAAA,MAAM,EAAG,GAAEtB,QAAS,gBAPxB,CAQI;AARJ;AASI,MAAA,QAAQ,EAAE,KAAKgD,qBATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWKG,YAAY,gBAAG;AAAK,MAAA,GAAG,EAAEA,YAAV;AAAwB,MAAA,GAAG,EAAC,QAA5B;AAAqC,MAAA,KAAK,EAAE;AAAEgE,QAAAA,KAAK,EAAE;AAAT,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAuEL,qBAXxF,CAVJ,CAxSJ,eAgUI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,gCADV;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACII,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAC,cAFb;AAGI,MAAA,SAAS,EAAC,iBAHd,CAII;AACA;AALJ;AAMI,MAAA,QAAQ,EAAElC,OAAO,CAACwC,QAAD,CAAP,GAAoB,IAApB,GAA2BA,QANzC;AAOI,MAAA,MAAM,EAAG,GAAE5B,QAAS,gBAPxB,CAQI;AARJ;AASI,MAAA,QAAQ,EAAE,KAAK2B,YATnB;AAUI,MAAA,QAAQ,EAAE,KAAK+B,YAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYK9B,QAAQ,CAAC6G,MAAT,IAAmB,CAAnB,GAAuB,IAAvB,GAA8B9B,YAZnC,CAVJ,CAhUJ,eAyVI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,WADV;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACIO,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,QAAQ,EAAE,KAAKkC,eAApC;AAAqD,MAAA,MAAM,EAAG,GAAExD,QAAS,gBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CAVJ,EAaK,KAAKgC,OAAL,CAAaC,OAAb,IAAwB,KAAKD,OAAL,CAAaC,OAAb,CAAqBuF,aAArB,CAAmC,WAAnC,CAAxB,iBAA2E;AAAG,MAAA,IAAI,EAAEvH,MAAM,GAAG,KAAK+B,OAAL,CAAaC,OAAb,CAAqBuF,aAArB,CAAmC,WAAnC,CAAlB;AAAmE,MAAA,MAAM,EAAC,QAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbhF,CAzVJ,eAwWI,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxWJ,eAyWI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,YADV;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACIN,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AASI,MAAA,KAAK,EAAE;AAAEoH,QAAAA,MAAM,EAAE;AAAV,OATX;AAUI,MAAA,YAAY,EAAC,EAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE,OAAV;AAAmBvB,QAAAA,KAAK,EAAE;AAA1B,OAAnB;AAAwD,MAAA,OAAO,EAAE;AAC7DwB,QAAAA,OAAO,EAAE,CACL,CAAC;AAAE,oBAAU;AAAZ,SAAD,EAAoB;AAAE,oBAAU;AAAZ,SAApB,EAAuC;AAAE,kBAAQ;AAAV,SAAvC,CADK,EAEL,CAAC;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAFK,EAGL,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAHK,EAIL,CAAC;AAAE,kBAAQ;AAAV,SAAD,EAAwB;AAAE,kBAAQ;AAAV,SAAxB,EACA;AAAE,oBAAU;AAAZ,SADA,EACoB;AAAE,oBAAU;AAAZ,SADpB,CAJK,EAML,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CANK,EAOL,CAAC,OAAD,CAPK,CADoD;AAU7DC,QAAAA,SAAS,EAAE;AACP;AACAC,UAAAA,WAAW,EAAE;AAFN;AAVkD,OAAjE;AAcG,MAAA,OAAO,EAAE,CACR,QADQ,EACE,MADF,EACU,MADV,EAER,MAFQ,EAEA,QAFA,EAEU,WAFV,EAEuB,QAFvB,EAEiC,YAFjC,EAGR,MAHQ,EAGA,QAHA,EAGU,QAHV,EAIR,MAJQ,EAIA,OAJA,EAIS,OAJT,CAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CAzWJ,EA2YK,KAAK9G,OAAL,CAAaC,OAAb,IAAwB,KAAKD,OAAL,CAAaC,OAAb,CAAqBuF,aAArB,CAAmC,YAAnC,CAAxB,IAA4E,KAAKxF,OAAL,CAAaC,OAAb,CAAqBuF,aAArB,CAAmC,YAAnC,EAAiDuB,QAAjD,CAA0D,QAA1D,CAA5E,iBAAmJ,uDAChJ,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADgJ,eAEhJ,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,QADV;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,KAAK,EAAE,CACH;AACI7B,QAAAA,QAAQ,EAAE,IADd;AAEI5F,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,KAAK,EAAE;AAAE6F,QAAAA,KAAK,EAAE;AAAT,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKvD,KAAL,CAAWwB,MAAX,CAAkBjG,GAAlB,CAAsB8G,KAAK,iBACxB,oBAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,KAAK,EAAEA,KAAK,CAACD,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCC,KAAK,CAAC+C,SAAxC,CADH,CADL,CAVJ,CAFgJ,CA3YxJ,eAgaI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,UAAU,EAAE;AACRC,QAAAA,MAAM,EAAE,CADA;AAERhC,QAAAA,IAAI,EAAE;AAFE,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKrD,KAAL,CAAWK,UAA5B;AAAwC,MAAA,IAAI,EAAC,SAA7C;AAAuD,MAAA,QAAQ,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CAhaJ,CADJ,CADJ,CADJ,CAFJ,CADJ,CADJ;AAwbH;;AArrB+B;;AAwrBpC,eAAezC,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Layout, Checkbox, Row, Col, Input, Button, notification, Form, Switch, Upload, Select, Divider, InputNumber, Space, DatePicker, Spin, Rate, TimePicker } from 'antd';\nimport { map, isEmpty, get, groupBy, forEach, has } from 'lodash'\nimport { LoadingOutlined, PlusOutlined, MinusCircleOutlined, UploadOutlined } from '@ant-design/icons';\nimport './index.scss';\nimport AdminHeader from \"../../AdminHeader\";\nimport { routes } from \"../../../Controller/Routes\";\nimport { history } from \"../../../Controller/history\";\nimport { BASE_URL, S3_URL } from \"../../../Controller/common\";\nimport { getCategories } from \"../../../Controller/api/category.Service\";\nimport { createTrip, getTripById, updateTrip } from \"../../../Controller/api/trip.Service\";\nimport moment from 'moment'\nimport ReactQuill from 'react-quill';\nimport { getHotels } from \"../../../Controller/api/hotelService\";\n\n\nconst { RangePicker } = DatePicker;\n\nconst { Content } = Layout;\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\n\nconst openNotification = placement => {\n    notification.info({\n        message: `Something Went`,\n        description:\n            'Something went wrong with the server API is not working',\n        placement,\n    });\n};\n\nclass ManageTrips extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: false,\n            noOfDays: 0,\n            fileList: [],\n            thumbnailLoading: false,\n            thumbnailImageUrl: \"\",\n            heroImageUrl: \"\",\n            heroImageLoading: false,\n            hotelImageLoading: false,\n            hotelImageUrl: \"\",\n            categories: [],\n            hotels: [],\n            isFetching: false,\n            tripData: {},\n            isformFetch: false,\n\n        }\n        this.formRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const tripId = this.props.match.params.id;\n        if (tripId) {\n            this.setState({\n                isformFetch: true\n            })\n            getTripById(tripId).then((res) => {\n                const daysObj = {}\n                forEach(res.data.response.trip.days, (day, index) => {\n                    daysObj[`day${index + 1}`] = day\n                })\n                this.setState({\n                    isformFetch: false,\n                    fileList: res.data.response.trip.images.map((image, index) => {\n                        return {\n                            uid: `-${index + 1}`,\n                            name: image,\n                            status: 'done',\n                            url: `${S3_URL}${image}`\n                        }\n                    }),\n                    thumbnailImageUrl: `${S3_URL}${res.data.response.trip.thumbnailImage}`,\n                    heroImageUrl: `${S3_URL}${res.data.response.trip.heroImage}`,\n                    hotelImageUrl: res.data.response.trip.hotelImage ? `${S3_URL}${res.data.response.trip.hotelImage}` : '',\n                    noOfDays: res.data.response.trip.noOfDays\n                })\n                this.formRef.current.setFieldsValue({\n                    ...daysObj,\n                    ...res.data.response.trip,\n                    category: res.data.response.trip.category._id,\n                    hotels: res.data.response.trip.hotels.map(hotel => hotel._id),\n                    hotelDates: res.data.response.trip?.hotelDates?.map(date => moment(date)),\n                    hotelCheckInTime: moment(res.data.response.trip.hotelCheckInTime),\n                    batches: res.data.response.trip.batches.map(batch => {\n                        return (\n                            {\n                                to: moment(batch.to),\n                                from: moment(batch.from)\n                            }\n                        )\n                    })\n                })\n            }).catch((err) => {\n                console.log(err, 'err')\n            })\n        }\n\n        getCategories().then((res) => {\n            this.setState({\n                categories: res.data.response.categories\n            })\n        }).catch((err) => {\n            console.log(\"catErr\", err)\n        })\n        getHotels().then((res) => {\n            this.setState({\n                hotels: res.data.response.Hotels\n            })\n        })\n    }\n    handleChange = ({ fileList }) => {\n        console.log(fileList, 'here')\n        this.setState({ fileList })\n        this.formRef.current.setFieldsValue({\n            images: fileList.map((file, index) => {\n                if (has(file, 'response')) {\n                    return file.response.response.image\n                }\n                else {\n                    return file.name\n                }\n            })\n        })\n    };\n    handleThumbnailChange = (info) => {\n        if (info.file.status === 'uploading') {\n            this.setState({ thumbnailLoading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.formRef.current.setFieldsValue({\n                thumbnailImage: get(info, 'file.response.response.image', '')\n            })\n            getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    thumbnailImageUrl: imageUrl,\n                    thumbnailLoading: false,\n                }),\n            );\n        }\n    }\n\n    handleHeroImageChange = (info) => {\n        if (info.file.status === 'uploading') {\n            this.setState({ heroImageLoading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.formRef.current.setFieldsValue({\n                heroImage: get(info, 'file.response.response.image', '')\n            })\n            getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    heroImageUrl: imageUrl,\n                    heroImageLoading: false,\n                }),\n            );\n        }\n    }\n\n\n    handleHotelImageChange = (info) => {\n        if (info.file.status === 'uploading') {\n            this.setState({ hotelImageLoading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.formRef.current.setFieldsValue({\n                hotelImage: get(info, 'file.response.response.image', '')\n            })\n            getBase64(info.file.originFileObj, imageUrl =>\n                this.setState({\n                    hotelImageUrl: imageUrl,\n                    hotelImageLoading: false,\n                }),\n            );\n        }\n    }\n    handlePDFChange = (info) => {\n        if (info.file.status === 'uploading') {\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.formRef.current.setFieldsValue({\n                itinerary: get(info, 'file.response.response.image', '')\n            })\n        }\n    }\n\n    handleRemove = (item) => {\n        console.log(item, 'remove')\n        this.setState({\n            fileList: this.state.fileList.filter(file => file.url !== item.url),\n\n        }, () => {\n            this.formRef.current.setFieldsValue({\n                images: [...this.state.fileList]\n            })\n        })\n    }\n\n    onFinish = (values) => {\n        this.setState({\n            isFetching: true\n        })\n        const tripId = this.props.match.params.id;\n        if (tripId) {\n            updateTrip(values, tripId).then(res => {\n                this.setState({\n                    isFetching: false\n                })\n                history.push(routes.dashboard.trips.self);\n            }).catch(err => {\n                this.setState({\n                    isFetching: false\n                })\n            })\n\n        } else {\n            createTrip(values).then((res) => {\n                this.setState({\n                    isFetching: false\n                })\n                history.push(routes.dashboard.trips.self);\n            }).catch(err => {\n                this.setState({\n                    isFetching: false\n                })\n            })\n        }\n    }\n\n    onFinishFailed = (error) => {\n        this.setState({\n            isFetching: false\n        })\n        openNotification('bottomCenter');\n    }\n    onValuesChange = (values) => {\n        this.setState({\n            values\n        })\n    }\n\n    render() {\n        const { loading, fileList, thumbnailImageUrl, thumbnailLoading, hotelImageLoading, hotelImageUrl, heroImageUrl, heroImageLoading } = this.state;\n        const tripId = this.props.match.params.id;\n\n\n        const uploadButton = (\n            <div>\n                {loading ? <LoadingOutlined /> : <PlusOutlined />}\n                <div style={{ marginTop: 8 }}>Upload</div>\n            </div>\n        );\n        const uploadButtonThumbnail = (\n            <div>\n                {thumbnailLoading ? <LoadingOutlined /> : <PlusOutlined />}\n                <div style={{ marginTop: 8 }}>Upload Thumbnail</div>\n            </div>\n        );\n        const uploadButtonHeroImage = (\n            <div>\n                {heroImageLoading ? <LoadingOutlined /> : <PlusOutlined />}\n                <div style={{ marginTop: 8 }}>Upload Hero Image</div>\n            </div>\n        );\n        const uploadButtonHotelImage = (\n            <div>\n                {hotelImageLoading ? <LoadingOutlined /> : <PlusOutlined />}\n                <div style={{ marginTop: 8 }}>Upload Hotel Image</div>\n            </div>\n        );\n        if (this.state.isformFetch) {\n            return (<Spin />)\n        }\n        return (\n            <React.Fragment>\n                <Layout className=\"layout\">\n                    <AdminHeader />\n                    <Content style={{ padding: '20px' }}>\n                        <div className=\"site-layout-content\">\n                            <Card title=\"Manage Trip\" extra={<Button type=\"primary\" onClick={() => history.push(routes.dashboard.trips.self)}>Trips</Button>}>\n                                <Form\n                                    ref={this.formRef}\n                                    name=\"basic\"\n                                    labelCol={{\n                                        span: 6,\n                                    }}\n                                    wrapperCol={{\n                                        span: 8,\n                                    }}\n                                    onFinish={this.onFinish}\n                                    onFinishFailed={this.onFinishFailed}\n                                    autoComplete=\"off\"\n                                    onValuesChange={this.onValuesChange}\n                                >\n                                    <Form.Item\n                                        label=\"Trip Name\"\n                                        name=\"name\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Trip Name',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Discounted Price (₹)\"\n                                        name=\"discountedPrice\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Discounted Price',\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber\n                                            style={{ width: '200px' }}\n                                            // formatter={(value) => `₹ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                            // parser={(value) => value.replace(/\\₹\\s?|(,*)/g, '')}\n                                        />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Actual Price (₹)\"\n                                        name=\"price\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Actual Price',\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber\n                                            style={{ width: '200px' }}\n                                            // formatter={(value) => `₹ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                            // parser={(value) => value.replace(/\\₹\\s?|(,*)/g, '')}\n                                        />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Kid Price (₹)\"\n                                        name=\"kidPrice\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Kid Price',\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber\n                                            style={{ width: '200px' }}\n                                            // formatter={(value) => `₹ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                            // parser={(value) => value.replace(/\\₹\\s?|(,*)/g, '')}\n                                        />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"From City\"\n                                        name=\"fromCity\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Departure Destination',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"To City\"\n                                        name=\"toCity\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Arival Destination',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n\n                                    <Form.Item\n                                        label=\"Duration of the drip\"\n                                        name=\"duration\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Duration of the trip',\n                                            },\n                                        ]}\n                                    >\n                                        <Input />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Is Trip International ?\"\n                                        name=\"isInternational\"\n                                        rules={[]}\n                                        valuePropName=\"checked\"\n                                    >\n                                        <Switch />\n                                    </Form.Item>\n\n                                    <Form.Item\n                                        label=\"Trip Status\"\n                                        name=\"status\"\n                                        rules={[]}\n                                        valuePropName=\"checked\"\n                                    >\n                                        <Switch />\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Category\"\n                                        name=\"category\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Select trip category',\n                                            },\n                                        ]}\n                                    >\n                                        <Select defaultValue=\"Select Category\"  >\n                                            {\n                                                map(this.state.categories, category => {\n                                                    return (\n                                                        <Select.Option value={category._id}>{category.name}</Select.Option>\n                                                    )\n                                                })\n                                            }\n\n                                        </Select>\n                                    </Form.Item>\n\n                                    <Form.Item name=\"inclusions\" label=\"Inclusions\">\n                                        <Checkbox.Group>\n                                            <Row>\n                                                <Col >\n                                                    <Checkbox value=\"flight\" style={{ lineHeight: '32px' }}>\n                                                        Flight\n                                                    </Checkbox>\n                                                </Col>\n                                                <Col >\n                                                    <Checkbox value=\"hostel\" style={{ lineHeight: '32px' }}>\n                                                        Accomodation\n                                                    </Checkbox>\n                                                </Col>\n                                                <Col >\n                                                    <Checkbox value=\"food\" style={{ lineHeight: '32px' }}>\n                                                        Food\n                                                    </Checkbox>\n                                                </Col>\n\n                                            </Row>\n                                        </Checkbox.Group>\n                                    </Form.Item>\n\n                                    <Divider plain>CREATE YOUR ITINERARY</Divider>\n                                    <Form.Item\n                                        label=\"No Of Days in Trip\"\n                                        name=\"noOfDays\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter the number of days included in the trip',\n                                            },\n                                        ]}\n                                    >\n                                        <InputNumber style={{ width: '200px' }} onChange={(e) => {\n                                            console.log(e)\n                                            this.setState({\n                                                noOfDays: e\n                                            }, () => {\n                                                this.formRef.current.setFieldsValue({ noOfDays: e })\n                                            })\n                                        }} placeholder=\"No of Days included in the trip\" />\n                                    </Form.Item>\n                                    <Form.Item\n                                        hidden\n                                        name={`days`}\n                                        initialValue={[]}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter the Day Description',\n                                            },\n                                        ]}\n                                    />\n\n                                    {map(Array(this.state.noOfDays), (day, index) => {\n                                        return (\n                                            <Form.Item\n                                                label={`Day ${index + 1}`}\n                                                name={`day${index + 1}`}\n                                                rules={[\n                                                    {\n                                                        required: true,\n                                                        message: 'Please Enter the Day Description',\n                                                    },\n                                                ]}\n                                            >\n                                                <Input.TextArea onChange={(e) => {\n                                                    const oldDays = this.formRef.current.getFieldValue('days') || [];\n                                                    oldDays[index] = e.target.value\n                                                    this.formRef.current.setFieldsValue({\n                                                        days: oldDays\n                                                    })\n                                                }} />\n                                            </Form.Item>\n                                        )\n                                    })}\n                                    <Divider plain>CREATE BATCHES</Divider>\n                                    <Form.List\n                                        name=\"batches\"\n                                        rules={[\n                                            {\n                                                validator: async (_, batches) => {\n                                                    console.log(_, batches, 'here')\n                                                    if (isEmpty(batches)) {\n                                                        return Promise.reject(new Error('At least 1 batch is required'));\n                                                    }\n                                                },\n                                            },\n                                        ]}\n                                    >\n                                        {(fields, { add, remove, errors }) => (\n                                            <>\n                                                {fields.map(({ key, name, ...restField }) => (\n                                                    <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                                                        <Form.Item\n                                                            {...restField}\n                                                            name={[name, 'from']}\n                                                            rules={[{ required: true, message: 'Missing Batch Start Date' }]}\n                                                        >\n                                                            <DatePicker disabledDate={(current) => current && current < moment().endOf('day')} style={{ width: '200px' }} placeholder=\"Batch Starts From\" />\n                                                        </Form.Item>\n                                                        <Form.Item\n                                                            {...restField}\n                                                            name={[name, 'to']}\n                                                            rules={[{ required: true, message: 'Missing Batch End Date' }]}\n                                                        >\n                                                            <DatePicker disabledDate={(current) => current && current < moment().endOf('day')} style={{ width: '200px' }} placeholder=\"Batch Ends on\" />\n                                                        </Form.Item>\n                                                        <MinusCircleOutlined onClick={() => remove(name)} />\n                                                    </Space>\n                                                ))}\n                                                <Form.Item>\n                                                    <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                                                        Add Batch\n                                                    </Button>\n                                                </Form.Item>\n                                                <Form.ErrorList errors={errors} />\n                                            </>\n                                        )}\n                                    </Form.List>\n                                    <Divider plain>Uploads</Divider>\n                                    <Form.Item\n                                        label=\"Trip Images Thumbnail (500px × 614px)\"\n                                        name=\"thumbnailImage\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Upload Category Image',\n                                            },\n                                        ]}\n                                    >\n                                        <Upload\n                                            name=\"image\"\n                                            listType=\"picture-card\"\n                                            className=\"avatar-uploader\"\n                                            // multiple={true}\n                                            showUploadList={false}\n                                            // fileList={fileList}\n                                            action={`${BASE_URL}/upload-image/`}\n                                            //beforeUpload={beforeUpload}\n                                            onChange={this.handleThumbnailChange}\n                                        >\n                                            {thumbnailImageUrl ? <img src={thumbnailImageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButtonThumbnail}\n                                        </Upload>\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Hero Images (570px × 258px)\"\n                                        name=\"heroImage\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Upload Hero Image',\n                                            },\n                                        ]}\n                                    >\n                                        <Upload\n                                            name=\"image\"\n                                            listType=\"picture-card\"\n                                            className=\"avatar-uploader\"\n                                            // multiple={true}\n                                            showUploadList={false}\n                                            // fileList={fileList}\n                                            action={`${BASE_URL}/upload-image/`}\n                                            //beforeUpload={beforeUpload}\n                                            onChange={this.handleHeroImageChange}\n                                        >\n                                            {heroImageUrl ? <img src={heroImageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButtonHeroImage}\n                                        </Upload>\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Trip Images (501px × 775px)\"\n                                        name=\"images\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Upload Category Image',\n                                            },\n                                        ]}\n                                    >\n                                        <Upload\n                                            name=\"image\"\n                                            listType=\"picture-card\"\n                                            className=\"avatar-uploader\"\n                                            // multiple={true}\n                                            // showUploadList={true}\n                                            fileList={isEmpty(fileList) ? null : fileList}\n                                            action={`${BASE_URL}/upload-image/`}\n                                            //beforeUpload={beforeUpload}\n                                            onChange={this.handleChange}\n                                            onRemove={this.handleRemove}\n                                        >\n                                            {fileList.length >= 2 ? null : uploadButton}\n                                        </Upload>\n                                    </Form.Item>\n                                    <Form.Item\n                                        label=\"Itinerary\"\n                                        name=\"itinerary\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Upload Itinerary PDF',\n                                            },\n                                        ]}\n                                    >\n                                        <Upload name=\"image\" onChange={this.handlePDFChange} action={`${BASE_URL}/upload-image/`}>\n                                            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n                                        </Upload>\n                                        {this.formRef.current && this.formRef.current.getFieldValue('itinerary') && <a href={S3_URL + this.formRef.current.getFieldValue('itinerary')} target=\"_blank\">Uploaded Itinerary</a>}\n                                    </Form.Item>\n                                    <Divider plain>Other Info</Divider>\n                                    <Form.Item\n                                        label=\"Other Info\"\n                                        name=\"otherInfo\"\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Please Enter Other Information!',\n                                            },\n                                        ]}\n                                        style={{ height: '300px' }}\n                                        initialValue=''\n                                    >\n                                        <ReactQuill style={{ height: '250px', width: '900px' }} modules={{\n                                            toolbar: [\n                                                [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                                                [{ size: [] }],\n                                                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                                                [{ 'list': 'ordered' }, { 'list': 'bullet' },\n                                                { 'indent': '-1' }, { 'indent': '+1' }],\n                                                ['link', 'image', 'video'],\n                                                ['clean']\n                                            ],\n                                            clipboard: {\n                                                // toggle to add extra line breaks when pasting HTML:\n                                                matchVisual: false,\n                                            }\n                                        }} formats={[\n                                            'header', 'font', 'size',\n                                            'bold', 'italic', 'underline', 'strike', 'blockquote',\n                                            'list', 'bullet', 'indent',\n                                            'link', 'image', 'video'\n                                        ]} />\n                                    </Form.Item>\n\n                                    {this.formRef.current && this.formRef.current.getFieldValue('inclusions') && this.formRef.current.getFieldValue('inclusions').includes('hostel') && <>\n                                        <Divider plain>Accomodations</Divider>\n                                        <Form.Item\n                                            label=\"Hotels\"\n                                            name=\"hotels\"\n                                            rules={[\n                                                {\n                                                    required: true,\n                                                    message: 'Please select atleast one hotel',\n                                                },\n                                            ]}\n                                        >\n                                            <Select mode=\"multiple\" style={{ width: '100%' }}>\n                                                {this.state.hotels.map(hotel => (\n                                                    <Select.Option value={hotel._id}>{hotel.hotelName}</Select.Option>\n                                                ))}\n                                            </Select>\n                                        </Form.Item>\n\n                                    </>}\n\n                                    <Form.Item\n                                        wrapperCol={{\n                                            offset: 8,\n                                            span: 16,\n                                        }}\n                                    >\n                                        <Button loading={this.state.isFetching} type=\"primary\" htmlType=\"submit\">\n                                            Submit\n                                        </Button>\n                                    </Form.Item>\n                                </Form>\n                            </Card>\n                        </div>\n                    </Content>\n                </Layout>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ManageTrips;\n"]},"metadata":{},"sourceType":"module"}